[{"D:\\laravel\\www\\frontend_react\\src\\index.js":"1","D:\\laravel\\www\\frontend_react\\src\\api.js":"2","D:\\laravel\\www\\frontend_react\\src\\redux\\reducers\\index.js":"3","D:\\laravel\\www\\frontend_react\\src\\route\\UnauthenticatedRoute.jsx":"4","D:\\laravel\\www\\frontend_react\\src\\pages\\TreePageC.jsx":"5","D:\\laravel\\www\\frontend_react\\src\\pages\\Login.jsx":"6","D:\\laravel\\www\\frontend_react\\src\\elements\\MaterialUI\\Tree\\TreeMultiSelection.js":"7","D:\\laravel\\www\\frontend_react\\src\\elements\\SexPicker.jsx":"8","D:\\laravel\\www\\frontend_react\\src\\icons\\BlueMan.jsx":"9","D:\\laravel\\www\\frontend_react\\src\\route\\routes.js":"10","D:\\laravel\\www\\frontend_react\\src\\redux\\actionTypes.js":"11","D:\\laravel\\www\\frontend_react\\src\\layout\\ProfileBar.jsx":"12","D:\\laravel\\www\\frontend_react\\src\\pages\\Profile.jsx":"13","D:\\laravel\\www\\frontend_react\\src\\redux\\actions\\index.js":"14","D:\\laravel\\www\\frontend_react\\src\\elements\\MaterialUI\\Tree\\TreeControlled.js":"15","D:\\laravel\\www\\frontend_react\\src\\elements\\Inputs.jsx":"16","D:\\laravel\\www\\frontend_react\\src\\icons\\Lock.jsx":"17","D:\\laravel\\www\\frontend_react\\src\\pages\\LarClientPage.jsx":"18","D:\\laravel\\www\\frontend_react\\src\\ModalManager.js":"19","D:\\laravel\\www\\frontend_react\\src\\layout\\NavigationBarMenu2.jsx":"20","D:\\laravel\\www\\frontend_react\\src\\pages\\Reg\\Form.jsx":"21","D:\\laravel\\www\\frontend_react\\src\\modals\\ModalOverlay.js":"22","D:\\laravel\\www\\frontend_react\\src\\elements\\AutocompleteList.jsx":"23","D:\\laravel\\www\\frontend_react\\src\\localStorage.js":"24","D:\\laravel\\www\\frontend_react\\src\\pages\\ResetPassword.jsx":"25","D:\\laravel\\www\\frontend_react\\src\\layout\\TestAPI.jsx":"26","D:\\laravel\\www\\frontend_react\\src\\App.js":"27","D:\\laravel\\www\\frontend_react\\src\\pages\\HookPage.jsx":"28","D:\\laravel\\www\\frontend_react\\src\\pages\\HookPageRedux.jsx":"29","D:\\laravel\\www\\frontend_react\\src\\pages\\HookPageRedux2.jsx":"30","D:\\laravel\\www\\frontend_react\\src\\elements\\DatePicker.jsx":"31","D:\\laravel\\www\\frontend_react\\src\\layout\\MainContent.jsx":"32","D:\\laravel\\www\\frontend_react\\src\\elements\\Loaders.jsx":"33","D:\\laravel\\www\\frontend_react\\src\\pages\\EmptyComponent.jsx":"34","D:\\laravel\\www\\frontend_react\\src\\icons\\Man.jsx":"35","D:\\laravel\\www\\frontend_react\\src\\route\\AuthenticatedRoute2.jsx":"36","D:\\laravel\\www\\frontend_react\\src\\api\\spring\\index.js":"37","D:\\laravel\\www\\frontend_react\\src\\pages\\WithoutReg.jsx":"38","D:\\laravel\\www\\frontend_react\\src\\layout\\Header.jsx":"39","D:\\laravel\\www\\frontend_react\\src\\elements\\MaterialUI\\Tree\\TreeCustom.js":"40","D:\\laravel\\www\\frontend_react\\src\\pages\\TreePageM.jsx":"41","D:\\laravel\\www\\frontend_react\\src\\modals\\ButtonsBlock.js":"42","D:\\laravel\\www\\frontend_react\\src\\modals\\Warning.jsx":"43","D:\\laravel\\www\\frontend_react\\src\\modals\\ModalWrapper.js":"44","D:\\laravel\\www\\frontend_react\\src\\modals\\EmptyView.jsx":"45","D:\\laravel\\www\\frontend_react\\src\\pages\\TreePageCtrl.jsx":"46","D:\\laravel\\www\\frontend_react\\src\\modals\\ModalOverlayHook.js":"47","D:\\laravel\\www\\frontend_react\\src\\layout\\ContentTitle.jsx":"48","D:\\laravel\\www\\frontend_react\\src\\rabbiitMq.js":"49","D:\\laravel\\www\\frontend_react\\src\\pages\\WebSockerPage.jsx":"50"},{"size":3841,"mtime":1615874263862,"results":"51","hashOfConfig":"52"},{"size":7261,"mtime":1611214749276,"results":"53","hashOfConfig":"52"},{"size":6320,"mtime":1615809040159,"results":"54","hashOfConfig":"52"},{"size":963,"mtime":1608041804659,"results":"55","hashOfConfig":"52"},{"size":932,"mtime":1608216767275,"results":"56","hashOfConfig":"52"},{"size":3110,"mtime":1608123183282,"results":"57","hashOfConfig":"52"},{"size":1249,"mtime":1608216516005,"results":"58","hashOfConfig":"52"},{"size":1250,"mtime":1608036028731,"results":"59","hashOfConfig":"52"},{"size":749,"mtime":1608036247589,"results":"60","hashOfConfig":"52"},{"size":1098,"mtime":1615807847661,"results":"61","hashOfConfig":"52"},{"size":1594,"mtime":1615806357278,"results":"62","hashOfConfig":"52"},{"size":1347,"mtime":1608111153252,"results":"63","hashOfConfig":"52"},{"size":9900,"mtime":1608105365410,"results":"64","hashOfConfig":"52"},{"size":23898,"mtime":1615811968124,"results":"65","hashOfConfig":"52"},{"size":1727,"mtime":1610352424342,"results":"66","hashOfConfig":"52"},{"size":1055,"mtime":1608036007716,"results":"67","hashOfConfig":"52"},{"size":945,"mtime":1608036247590,"results":"68","hashOfConfig":"52"},{"size":2705,"mtime":1611562038894,"results":"69","hashOfConfig":"52"},{"size":1922,"mtime":1611729221207,"results":"70","hashOfConfig":"52"},{"size":3203,"mtime":1615807926597,"results":"71","hashOfConfig":"52"},{"size":11771,"mtime":1610958389941,"results":"72","hashOfConfig":"52"},{"size":740,"mtime":1611663571201,"results":"73","hashOfConfig":"74"},{"size":1060,"mtime":1608035918824,"results":"75","hashOfConfig":"52"},{"size":905,"mtime":1615812512466,"results":"76","hashOfConfig":"52"},{"size":3240,"mtime":1608042616860,"results":"77","hashOfConfig":"52"},{"size":22683,"mtime":1608034473494,"results":"78","hashOfConfig":"52"},{"size":6110,"mtime":1615813342903,"results":"79","hashOfConfig":"52"},{"size":2558,"mtime":1610695741057,"results":"80","hashOfConfig":"52"},{"size":1564,"mtime":1610711264498,"results":"81","hashOfConfig":"52"},{"size":2668,"mtime":1611664423721,"results":"82","hashOfConfig":"52"},{"size":694,"mtime":1610956765785,"results":"83","hashOfConfig":"52"},{"size":235,"mtime":1608204267407,"results":"84","hashOfConfig":"52"},{"size":641,"mtime":1608036130775,"results":"85","hashOfConfig":"52"},{"size":4180,"mtime":1611827213973,"results":"86","hashOfConfig":"52"},{"size":689,"mtime":1608036247592,"results":"87","hashOfConfig":"52"},{"size":681,"mtime":1611149030354,"results":"88","hashOfConfig":"52"},{"size":1002,"mtime":1611827253011,"results":"89","hashOfConfig":"52"},{"size":2518,"mtime":1608034901167,"results":"90","hashOfConfig":"52"},{"size":1029,"mtime":1610372760814,"results":"91","hashOfConfig":"52"},{"size":4611,"mtime":1608274079884,"results":"92","hashOfConfig":"52"},{"size":940,"mtime":1608216877342,"results":"93","hashOfConfig":"52"},{"size":175,"mtime":1608025618152,"results":"94","hashOfConfig":"52"},{"size":615,"mtime":1611663131441,"results":"95","hashOfConfig":"52"},{"size":469,"mtime":1611663580992,"results":"96","hashOfConfig":"52"},{"size":395,"mtime":1611669866832,"results":"97","hashOfConfig":"52"},{"size":947,"mtime":1608276492251,"results":"98","hashOfConfig":"52"},{"size":694,"mtime":1611727283459,"results":"99","hashOfConfig":"52"},{"size":749,"mtime":1608036066550,"results":"100","hashOfConfig":"52"},{"size":2439,"mtime":1615877974498,"results":"101","hashOfConfig":"52"},{"size":2260,"mtime":1615808573281,"results":"102","hashOfConfig":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},"ucyc7c",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"106"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"106"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"106"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"106"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"106"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"106"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gjjqh9",{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"106"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"106"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"106"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"106"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"106"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"106"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"106"},"D:\\laravel\\www\\frontend_react\\src\\index.js",["227","228","229","230","231","232","233","234"],"/* Этоот код генерится create-react-app  при создании приложения\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n*/\n\nimport './css/toastr.css';\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport throttle from 'lodash/throttle';\nimport thunk from 'redux-thunk';\nimport AppReducer from './redux/reducers';\nimport { useSelector, useDispatch } from 'react-redux';\n\n\nimport { loadState, clearState } from './localStorage';\nimport App from './App';\nimport ModalManager from './ModalManager';\n\nimport toastr from 'toastr';\nimport axios from 'axios';\n////////////WEB SOCKET///////////////////////////////////////////////////////////////////\n// 2021-02-08 Laravel Pusher\nimport Echo from \"laravel-echo\"\nimport Pusher from \"pusher-js\"\nimport { setEvent } from './redux/actions';\nimport rabbitMq from './rabbiitMq';\n\n\ntoastr.options = {\n  \"closeButton\": false,\n  \"debug\": false,\n  \"newestOnTop\": false,\n  \"progressBar\": true,\n  \"positionClass\": \"toast-bottom-right\",\n  \"preventDuplicates\": false,\n  \"onclick\": null,\n  \"showDuration\": \"300\",\n  \"hideDuration\": \"300\",\n  \"timeOut\": \"3000\",\n  \"extendedTimeOut\": \"1000\",\n  \"showEasing\": \"swing\",\n  \"hideEasing\": \"linear\",\n  \"showMethod\": \"fadeIn\",\n  \"hideMethod\": \"fadeOut\"\n}\n window.toast = toastr;\n\n\nexport let store = createStore(AppReducer, loadState(), composeWithDevTools(applyMiddleware(thunk)));\n\n\nconsole.log('START APP');\nconsole.log('store=', store);\nconsole.log('token=', store.getState());\n// 2021-03-15\n\n// перенос в APP только для идентифицировангного пользователя включается\n//rabbitMq( store );\n\n\n/**  axios прерыватель interceptors запрос */ \naxios.interceptors.request.use(\n  config => {\n    if(store.getState().token)\n      config.headers.Authorization = 'Bearer ' + store.getState().token;\n    return config;\n  },\n  error => Promise.reject(error)\n);\n\n/**  axios прерыватель interceptors ответ */ \naxios.interceptors.response.use(response => {\n  return response;\n}, error => {\n//  console.log('error =', error);\n  console.log('error status=', error.response.status);\n  if (error.response.status === 401) {\n      console.log('response401 =', error.response);\n      if( error.response.config.url == '/api/auth/logout')  {\n        clearState();\n        return error;\n/*\n        setTimeout(() => {\n            window.location.pathname = '/auth';\n          }, 1000);\n*/\n      }\n      else {   \n          window.toast.error('Ошибка авторизации');\n          clearState();\n          setTimeout(() => {\n// код работает, но что будет если обработку отдать выше?          \n            window.location.pathname = '/auth';\n          }, 1000);\n      }  \n  } \n  if (error.response.status === 403) {\n    console.log('response403 =', error.response);\n    window.toast.error('Недостаточно прав доступа');\n  } \n  return Promise.reject(error)\n})\n\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\nrender(\n  <Provider store={store}>\n    <ModalManager />\n  </Provider>,\n  document.getElementById('modals_root')\n);\n",["235","236"],"D:\\laravel\\www\\frontend_react\\src\\api.js",[],"D:\\laravel\\www\\frontend_react\\src\\redux\\reducers\\index.js",["237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254"],"import {combineReducers} from 'redux';\r\nimport * as actionTypes from '../actionTypes';\r\nimport uniqueId from 'lodash/uniqueId';\r\n\r\nconst pending = (status = {}, action) => {\r\n    if (action.type === actionTypes.PENDING_SET) {\r\n        return {\r\n            ...status,\r\n            [action.key]: !!action.value,\r\n        };\r\n    }\r\n    return status;\r\n};\r\n\r\nconst token = (token = null, action) => {\r\n    if (action.type === actionTypes.TOKEN_SET) return action.token;\r\n    return token;\r\n};\r\n\r\nconst user = (data = null, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.USER_SET:\r\n            action.data.sex = !!action.data.sex;\r\n            return action.user;\r\n        case actionTypes.USER_UPDATE:\r\n            action.data.sex = !!action.data.sex;\r\n            return {\r\n                ...data,\r\n                ...action.data\r\n            };\r\n        case actionTypes.USER_LOGOUT:\r\n            return null;\r\n    }\r\n    return data;\r\n};\r\n\r\nconst activities = (list = [], {data, type}) => {\r\n    if (type === actionTypes.ACTIVITY_UPDATE) {\r\n        return data;\r\n    }\r\n    return list;\r\n};\r\n\r\nconst basketItems = (items = [], action) => {\r\n//    console.log('basketItems action=', action, items);\r\n    switch (action.type) {\r\n        case actionTypes.setBasketItems: \r\n            return action.items;\r\n/*\r\n            let newItems = [];\r\n            for (let i = 0; i < action.items.length; i++)\r\n                newItems.push(action.items[i])\r\n            return newItems;\r\n*/\r\n        case actionTypes.clearBasketPromo:\r\n                let newItems = [];\r\n                for (let i = 0; i < items; i++) {\r\n                    let itemNew = items[i];\r\n                    delete itemNew.promo;\r\n                    newItems.push(itemNew);\r\n                }    \r\n                return newItems;\r\n        case actionTypes.addBasketItem:\r\n            const activity = action.activity;\r\n            const activity_tariff_id = action.activity_tariff_id;\r\n            let newItem = null;\r\n            const restItems = items.reduce((arr, item) => {\r\n                if (item.activity.id != activity.id) return [...arr, item];\r\n                else if (item.activity_tariff_id != activity_tariff_id) return [...arr, item];\r\n                newItem = {...item, count: item.count + 1};\r\n                return arr;\r\n            }, []);\r\n            let newItemId = parseInt(uniqueId(), 10);\r\n            while (!!restItems.find(item => item.id == newItemId)) newItemId = parseInt(uniqueId(), 10);\r\n            if (!newItem) {\r\n                newItem = {\r\n                    id: newItemId,\r\n                    activity,\r\n                    activity_tariff_id,\r\n                    is_tandem: false,\r\n                    count: 1\r\n                }\r\n            }\r\n            return [...restItems, newItem];\r\n\r\n        case actionTypes.updateBasketItem:\r\n            return items.map(item => item.id == action.id ? {...item, count: Math.max(action.count, 1)} : {...item});\r\n\r\n        case actionTypes.removeBasketItem:\r\n            return items.filter(item => item.id != action.id);\r\n\r\n        case actionTypes.changeBasketItemsTariffs:\r\n            // Changed values can be accessed by `action.payload`\r\n            return items;\r\n    }\r\n    return items;\r\n};\r\n\r\nconst tickets = (tickets = [], action) => {\r\n    if (action.type == actionTypes.setTickets) {\r\n        return action.data;\r\n    }\r\n    return tickets;\r\n};\r\n\r\nconst modal = (state = {}, action) => {\r\n    if (action.type == actionTypes.updateModal) {\r\n        return {\r\n            type: action.modalType,\r\n            data: action.data,\r\n        }\r\n    }\r\n    return state;\r\n};\r\n\r\nconst modals = (state = {}, action) => {\r\n    if (action.type == actionTypes.addModal) {\r\n        if(state && state.length > 0) {\r\n            return [...state, action]\r\n        }\r\n        else\r\n            return [action]\r\n    }\r\n    else if (action.type == actionTypes.closeModal) {\r\n        console.log('Close Modal');\r\n        if (state && state.length > 0) {\r\n            let res = [];\r\n            for(let i=0; i<state.length-1;i++) {\r\n                res.push(state[i]);\r\n            }\r\n            return res;\r\n        }\r\n    }\r\n    return state;\r\n};\r\n\r\nconst printingTemplate = (template = null, action) => {\r\n    if (action.type == actionTypes.setPrintingTemplate) {\r\n        return action.template;\r\n    }\r\n    return template;\r\n};\r\n\r\nconst reservedDates = (dates = {}, action) => {\r\n    if (action.type == actionTypes.setReservedDate) {\r\n        return {\r\n            ...dates,\r\n            [action.activityId]: action.dates\r\n        };\r\n    }\r\n    return dates;\r\n};\r\n\r\nconst reservationTimers = (timers = [], action) => {\r\n    if (action.type == actionTypes.setReservationTimers) {\r\n        return action.timers;\r\n    }  else if (action.type == actionTypes.addReservationTimer) {\r\n        return [...timers, {\r\n            reservationId: action.reservationId,\r\n            expirationTime: action.expirationTime,\r\n        }];\r\n    } else if (action.type == actionTypes.removeReservationTimer) {\r\n        return timers.filter(timer => timer.reservationId != action.reservationId);\r\n    }\r\n\r\n    return timers;\r\n};\r\n\r\n\r\nconst clients = (list = [], { data, type }) => {\r\n    if (type === actionTypes.CLIENT_UPDATE) {\r\n        return data;\r\n    }\r\n    return list;\r\n};\r\n\r\n/* Запись события в хранилище */\r\n\r\nconst events = (list = {}, { type, data }) => {\r\n    if (type === actionTypes.EVENT_SET) {\r\n        console.log('reducer EVENT_SET', data);\r\n        return data\r\n    }\r\n    return list;\r\n};\r\n\r\n\r\nconst websocket = (status = {}, action) => {\r\n    if (action.type === actionTypes.WEB_SOCKET) {\r\n        const data = action.data;\r\n        const key = data.key;\r\n        const value = data.value;\r\n/*\r\n        console.log('key = ', key);\r\n        console.log('value = ', value);\r\n*/\r\n        return {\r\n            ...status,\r\n            [key]: value,\r\n        };\r\n    }\r\n    return status;\r\n};\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    pending,\r\n    token,\r\n    user,\r\n    activities,\r\n    basketItems,\r\n    tickets,\r\n    modal,\r\n    printingTemplate,\r\n    reservedDates,\r\n    reservationTimers,\r\n    modals,\r\n//\r\n   clients,  \r\n// 2021-02-09\r\n   events,\r\n   websocket\r\n\r\n\r\n});\r\n\r\nexport default rootReducer;\r\n","D:\\laravel\\www\\frontend_react\\src\\route\\UnauthenticatedRoute.jsx",["255","256","257","258"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {CSSTransitionGroup} from 'react-transition-group';\r\nimport {Route, Redirect, withRouter} from 'react-router';\r\n\r\n        {/*<CSSTransitionGroup transitionName=\"fade\" transitionEnterTimeout={200} transitionLeaveTimeout={200}>*/}\r\nconst UnauthenticatedRoute = ({component: Component, ...rest}) => {\r\n    return (\r\n            <Route {...rest} render={\r\n                props => !rest.auth ? <Component {...props} /> : <Redirect to={rest.fallback || props.location} />\r\n            } />\r\n    );\r\n};\r\n        {/*</CSSTransitionGroup>*/}\r\n\r\nUnauthenticatedRoute.propTypes = {\r\n    auth: PropTypes.bool,\r\n    path: PropTypes.string,\r\n//    component: PropTypes.func.isRequired,\r\n//    component: PropTypes.object.isRequired,\r\n    fallback: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\r\n};\r\n\r\n// export default withRouter(UnauthenticatedRoute);\r\nexport default UnauthenticatedRoute;\r\n","D:\\laravel\\www\\frontend_react\\src\\pages\\TreePageC.jsx",["259","260","261","262"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport {MediumHourGlass} from '../elements/Loaders';\r\nimport debounce from 'lodash/debounce';\r\n\r\nimport { Button } from '@material-ui/core';\r\nimport TreeGrid  from '../elements/MaterialUI/Tree/TreeCustom';\r\n\r\nclass GridPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    \r\n\r\n    componentDidMount() {\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"content content-924\">\r\n                <ContentTitle className=\"booking-title\">\r\n                    Tree Page Material UI\r\n                </ContentTitle>\r\n                <div style={{ height : '70vh'}}>\r\n                    <TreeGrid/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n    }),\r\n    dispatch => ({\r\n    })\r\n)(GridPage);\r\n","D:\\laravel\\www\\frontend_react\\src\\pages\\Login.jsx",[],"D:\\laravel\\www\\frontend_react\\src\\elements\\MaterialUI\\Tree\\TreeMultiSelection.js",[],"D:\\laravel\\www\\frontend_react\\src\\elements\\SexPicker.jsx",["263","264"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BlueManIcon from '../icons/BlueMan';\r\n\r\nconst RadioInput = ({label, handler, ...props}) => (\r\n    <div className=\"radio-sex\" onClick={handler}>\r\n        <input {...props} type=\"radio\" checked={props.checked} onChange={handler} />\r\n        <label>{label}</label>\r\n    </div>\r\n);\r\n\r\nRadioInput.propTypes = {\r\n    label: PropTypes.string,\r\n    checked: PropTypes.bool.isRequired,\r\n    handler: PropTypes.func.isRequired,\r\n};\r\n\r\nconst male = true;\r\n\r\nconst SexPicker = ({value, ...props}) => {\r\n    const handler = value => () => props.onChange(value);\r\n    return (\r\n        <div className=\"sex clearfix\">\r\n            <BlueManIcon />\r\n            <RadioInput {...props} \r\n                checked={value != null && value == male}\r\n                handler={handler(true)} \r\n                label=\"м\" />\r\n            <RadioInput {...props} \r\n                checked={value != null && value != male}\r\n                handler={handler(false)}\r\n                label=\"ж\" />\r\n        </div>\r\n    )\r\n};\r\n\r\nSexPicker.propTypes = {\r\n    value: PropTypes.bool,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nSexPicker.defaultProps = {\r\n    value: true,\r\n};\r\n\r\nexport default SexPicker;\r\n","D:\\laravel\\www\\frontend_react\\src\\icons\\BlueMan.jsx",[],"D:\\laravel\\www\\frontend_react\\src\\route\\routes.js",[],"D:\\laravel\\www\\frontend_react\\src\\redux\\actionTypes.js",[],"D:\\laravel\\www\\frontend_react\\src\\layout\\ProfileBar.jsx",["265"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {logOut} from '../redux/actions';\r\n// новый правиьно работающий на сервере logout\r\nimport { logout1 } from '../redux/actions';\r\n\r\nconst ProfileBar = props => (\r\n    <ul className=\"login-menu\">\r\n        {\r\n            props.user ?\r\n                (\r\n                    [\r\n                        <li className=\"profile\" key=\"1\">\r\n                            <Link to=\"/me\">{props.user.name} {props.user.surname}</Link>\r\n                        </li>,\r\n                        <li key=\"2\">\r\n                            <a onClick={()=>props.makeLogout(props.token)} style={{cursor: 'pointer'}}>Выход</a>\r\n                        </li>\r\n                    ]\r\n                )\r\n                : <li className=\"login\" data-id=\"2\"><Link to=\"/auth\">Вход</Link></li>\r\n        }\r\n\r\n        {\r\n            !props.user &&\r\n            <li className=\"reg\" data-id=\"3\"><Link to=\"/reg\">Регистрация</Link></li>\r\n        }\r\n    </ul>\r\n);\r\n\r\nexport default connect(\r\n    state => ({\r\n       token: state.token,\r\n       user: state.user,\r\n    }),\r\n    dispatch => ({\r\n        logOut: () => dispatch(logOut()),\r\n        makeLogout: (token) => dispatch(logout1(token)),\r\n\r\n    })\r\n)(ProfileBar);\r\n","D:\\laravel\\www\\frontend_react\\src\\pages\\Profile.jsx",["266","267"],"import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {updateUser} from '../redux/actions';\r\n\r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport SexPicker from '../elements/SexPicker';\r\nimport {WhiteInput} from '../elements/Inputs';\r\nimport moment from \"moment\";\r\nimport {DatePicker} from \"../elements/DatePicker\";\r\n\r\nclass DateInput extends React.PureComponent {\r\n    render() {\r\n        return <WhiteInput type=\"text\" placeholder=\"01.01.1970\" label=\"Дата рождения\" name=\"birth_date\"\r\n                           value={this.props.value}\r\n                           onClick={this.props.onClick} onChange={this.props.onChange} />\r\n    }\r\n}\r\n\r\nclass Profile extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: props.user,\r\n            old_password: '',\r\n            new_password: '',\r\n            new_password_confirm: '',\r\n            changePasswordPending: false,\r\n        };\r\n\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.canChangePassword = this.canChangePassword.bind(this);\r\n        this.changePassword = this.changePassword.bind(this);\r\n        this.onSexChange = this.onSexChange.bind(this);\r\n        this.onPhoneChange = this.onPhoneChange.bind(this);\r\n        this.isValid = this.isValid.bind(this);\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        if (!nextProps.pending) this.setState({user: nextProps.user});\r\n    }\r\n\r\n    isValid() {\r\n        const user = this.state.user;\r\n        return (\r\n            user.name && user.name.length > 0 &&\r\n            user.surname && user.surname.length > 0 &&\r\n            user.phone && user.phone.length > 5 && user.phone.length < 12 &&\r\n            user.country && user.country.length > 0 &&\r\n            moment.isMoment(user.birth_date) && user.birth_date.isValid()\r\n        );\r\n    }\r\n\r\n    onInputChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                [name]: value,\r\n            }\r\n        }))\r\n    }\r\n\r\n    onSexChange(sex) {\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                sex,\r\n            }\r\n        }))\r\n    }\r\n\r\n    onPhoneChange(event) {\r\n        const value = event.target.value;\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                phone: value.replace(/\\D*/g, ''),\r\n            }\r\n        }))\r\n    }\r\n\r\n    canChangePassword() {\r\n        return (\r\n            !this.state.changePasswordPending &&\r\n            this.state.old_password.length > 5 && this.state.new_password.length > 5 &&\r\n            this.state.new_password === this.state.new_password_confirm\r\n        );\r\n    }\r\n\r\n    changePassword(event) {\r\n        event.preventDefault();\r\n        if (!this.canChangePassword) return;\r\n\r\n        this.setState({changePasswordPending: true});\r\n\r\n        fetch(`/api/client/password`, {\r\n            method: 'POST',\r\n            'credentials': 'include',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                old_password: this.state.old_password,\r\n                new_password: this.state.new_password,\r\n            })\r\n        })\r\n            .then(r => r.json())\r\n            .then(data => {\r\n                this.setState({changePasswordPending: false});\r\n\r\n                if (!data.error) {\r\n                    this.setState({old_password: '', new_password: '', new_password_confirm: ''});\r\n                    window.toast.success('Пароль изменён');\r\n                } else {\r\n                    if (data.error.code == 1) {\r\n                        this.setState({old_password: ''});\r\n                        window.toast.error('Неверный старый пароль');\r\n                    } else if (data.error.code == 2) {\r\n                        this.setState({new_password: '', new_password_confirm: ''});\r\n                        window.toast.error('Новый пароль некорректен');\r\n                    } else {\r\n                        throw new Error();\r\n                    }\r\n                }\r\n            })\r\n            .catch(() => {\r\n                this.setState({changePasswordPending: false});\r\n                window.toast.error('Произошла ошибка, повторите позднее');\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const user = this.state.user;\r\n        const pending = this.props.pending;\r\n        const onSubmit = pending || !this.isValid()\r\n            ? () => {\r\n            }\r\n            : event => {\r\n                event.preventDefault();\r\n                this.props.onSubmit(this.state.user)\r\n            };\r\n\r\n        if (!this.props.token || !this.props.user) return <Redirect to=\"/auth\" />;\r\n\r\n        return (\r\n            <div className=\"content content-924\">\r\n                <ContentTitle>{this.props.user.name} {this.props.user.surname}</ContentTitle>\r\n\r\n                <form onSubmit={onSubmit}>\r\n                    <SexPicker name=\"sex\" value={user.sex} onChange={this.onSexChange} />\r\n                    <div className=\"white-content reg-form-step-2\" style={{paddingBottom: '20px'}}>\r\n                        <div className=\"form login-form white-input-form\">\r\n                            <WhiteInput type=\"email\" value={user.email || ''} label=\"E-mail\" name=\"email\" disabled />\r\n\r\n                            <WhiteInput type=\"text\" value={user.surname || ''} label=\"Фамилия\" name=\"surname\"\r\n                                        onChange={this.onInputChange} />\r\n                            <WhiteInput type=\"text\" value={user.name || ''} label=\"Имя\" name=\"name\"\r\n                                        onChange={this.onInputChange} />\r\n                            <WhiteInput type=\"text\" value={user.middle_name || ''} label=\"Отчество\" name=\"middle_name\"\r\n                                        onChange={this.onInputChange} />\r\n\r\n                            <DatePicker customInput={<DateInput />} selected={user.birth_date}\r\n                                        onChange={date => this.setState(prevState => ({\r\n                                            user: {\r\n                                                ...prevState.user,\r\n                                                birth_date: date\r\n                                            }\r\n                                        }))} showYearDropdown showMonthDropdown dropdownMode=\"select\" />\r\n\r\n                            <WhiteInput type=\"text\" value={user.phone || ''} label=\"Телефон\" name=\"phone\"\r\n                                        placeholder=\"79609966699\"\r\n                                        onChange={this.onPhoneChange} />\r\n\r\n                            <WhiteInput type=\"text\" label=\"Страна\" name=\"country\"\r\n                                        value={user.country || ''} onChange={this.onInputChange} />\r\n\r\n                            <WhiteInput type=\"text\" label=\"Город\" name=\"city\"\r\n                                        value={user.city || ''} onChange={this.onInputChange} />\r\n\r\n                            <div className=\"rem\">&nbsp;</div>\r\n                            <div className=\"row-button\">\r\n                                <input type=\"submit\" value=\"Обновить\" disabled={pending || !this.isValid()} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                <form method=\"post\" onSubmit={this.changePassword}>\r\n                    <div className=\"white-content reg-form-step-2\">\r\n                        <div className=\"form login-form white-input-form\">\r\n                            <WhiteInput type=\"password\" label=\"Старый пароль\"\r\n                                        value={this.state.old_password || ''} onChange={e => this.setState({old_password: e.target.value})} />\r\n                            <WhiteInput type=\"password\" label=\"Новый пароль\"\r\n                                        value={this.state.new_password || ''} onChange={e => this.setState({new_password: e.target.value})} />\r\n                            <WhiteInput type=\"password\" label=\"Подтвердите новый пароль\"\r\n                                        value={this.state.new_password_confirm || ''} onChange={e => this.setState({new_password_confirm: e.target.value})} />\r\n\r\n                            <div className=\"rem\">&nbsp;</div>\r\n                            <div className=\"row-button\">\r\n                                <input type=\"submit\" value=\"Изменить пароль\" disabled={!this.canChangePassword()} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfile.defaultProps = {\r\n    user: {\r\n        sex: true,\r\n        email: '',\r\n        name: '',\r\n        surname: '',\r\n        middle_name: '',\r\n        country: '',\r\n        city: '',\r\n        height: null,\r\n        weight: null,\r\n        birth_date: moment(),\r\n        phone: '',\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    state => ({\r\n        token: state.token,\r\n        user: state.user ? {...state.user, birth_date: moment(state.user.birth_date)} : Profile.defaultProps.user,\r\n        pending: state.pending.user,\r\n    }),\r\n    dispatch => ({\r\n        onSubmit: ({email, ...data}) => {\r\n            dispatch(updateUser({\r\n                ...data,\r\n                birth_date: data.birth_date.format('YYYY-MM-DD'),\r\n            }));\r\n        }\r\n    })\r\n)(Profile)\r\n","D:\\laravel\\www\\frontend_react\\src\\redux\\actions\\index.js",["268"],"import * as actionTypes from '../actionTypes';\r\nimport throttle from 'lodash/throttle';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\nimport { getLogout1, getClients } from '../../api';\r\n// 2020-12-17 сохранение в localstorage\r\nimport { saveState } from '../../localStorage';\r\nimport { store } from \"../../index\";\r\n// 2021-03-15\r\nimport { deactivateWebSocket } from '../../rabbiitMq';\r\nconst url = '/api/';\r\n\r\nconst encodeParams = (params = {}) => {\r\n    return Object\r\n        .keys(params)\r\n        .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`)\r\n        .join('&');\r\n};\r\n\r\nconst urlWithParams = (url, params) => url + '?' + encodeParams(params);\r\n\r\nconst params = (data = {}, method = 'POST') => {\r\n    let params = {\r\n        method: method,\r\n        credentials: 'include',\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n        },\r\n    };\r\n    if (method === 'POST') params.body = JSON.stringify(data);\r\n\r\n    return params;\r\n};\r\n\r\nconst assembleBasketItemsRequest = basketItems => {\r\n    let startAcc = {};\r\n    basketItems.forEach(el => {\r\n        startAcc[el.activity.id] = [];\r\n    });\r\n    return basketItems.reduce((acc, item) => {\r\n        acc[item.activity.id].push({\r\n            count: item.count,\r\n            persons: item.persons || null,\r\n            activity_tariff_id: item.activity_tariff_id,\r\n            is_tandem: item.is_tandem || false,\r\n            promo_detail_id: (item.promo) ? item.promo.promoDetailId: null,\r\n            promo_detail_value: (item.promo) ? item.promo.value : null,\r\n            promo_detail_unit: (item.promo) ? item.promo.unit : null,\r\n            promo_detail_count: (item.promo) ? item.promo.count : null,\r\n        });\r\n        return acc;\r\n    }, startAcc);\r\n}\r\n\r\nexport const setPending = (key, value) => ({\r\n    type: actionTypes.PENDING_SET,\r\n    key,\r\n    value,\r\n});\r\n\r\nexport const setPendings = pendings => ({\r\n    type: actionTypes.setPendings,\r\n    pendings,\r\n});\r\n\r\nexport const setToken = token => ({\r\n    type: actionTypes.TOKEN_SET,\r\n    token\r\n});\r\n\r\n// User actions изменен по сравнение со Skypark - там fetch используется\r\n// c использованием axios и его прерывателей, 401 ошибка авторизаации там обрабатывается и сюда не доходит\r\nexport const logIn = (email, password) => dispatch => {\r\n    dispatch(setPending('user', true));\r\n    axios.post(\r\n        url + 'auth/login',\r\n        {  // data\r\n           email, password,\r\n        }, \r\n        ).then(response => {\r\n          const data = response.data;\r\n            dispatch(setPending('user', false));\r\n            if (!data.error) {\r\n                const token = data.access_token;\r\n                delete data.access_token;\r\n\r\n                dispatch(setToken(token));\r\n                dispatch({\r\n                    type: actionTypes.USER_UPDATE,\r\n                    data\r\n                });\r\n                saveState( store.getState());  // сохранение state в localStorage\r\n            } else {\r\n                switch (data.error.code) {\r\n                    case 3:\r\n                        window.toast.error('Неверные логин и пароль');\r\n                        break;\r\n                    default:    \r\n                        window.toast.error('Прочие ошибки авторизации');\r\n                }\r\n            }\r\n        })\r\n        .catch(error => console.log('error', error));\r\n};\r\n\r\n\r\nexport const restorePassword = email => dispatch => {\r\n    dispatch(setPending('user', true));\r\n// 2020-01-19\r\n//    fetch(url + 'auth/restore', params({email, }))\r\n    fetch(urlWithParams(url + 'auth/resetpassword', { email }))\r\n        .then(r => r.json())\r\n        .then(data => {\r\n            dispatch(setPending('user', false));\r\n            if (!data.error) {\r\n                window.toast.success('На почту было отправлено письмо с Вашим c ссылкой на восттановление');\r\n            } else {\r\n                switch (data.error.code) {\r\n                    case 1:\r\n                        window.toast.error('Некорректный e-mail');\r\n                        break;\r\n                    case 4:\r\n                        window.toast.error('Пользователь с этим e-mail не найден');\r\n                        break;\r\n                    default:    \r\n                        window.toast.error('Прочие ошибки');\r\n                }\r\n            }\r\n        })\r\n        .catch(error => console.log('error', error));\r\n};\r\n\r\n\r\n\r\nexport const regUser = data => dispatch => {\r\n    dispatch(setPending('user', true));\r\n\r\n    fetch(url + 'auth/registration', params(data))\r\n        .then(r => r.json())\r\n        .then(data => {\r\n            dispatch(setPending('user', false));\r\n            if (!data.error) {\r\n                // const token = data.access_token;\r\n                // delete data.access_token;\r\n\r\n                window.toast.success('Регистрация прошла успешно. Вам на почту было отправлено письмо для подтверждения регистрации');\r\n\r\n                /*dispatch(setToken(token));\r\n                dispatch({\r\n                    type: actionTypes.USER_UPDATE,\r\n                    data: data\r\n                });*/\r\n            } else {\r\n                switch (data.error.code) {\r\n                    case 5:\r\n                        window.toast.error('Некорректное имя');\r\n                        break;\r\n                    case 6:\r\n                        window.toast.error('Некорректный e-mail');\r\n                        break;\r\n                    case 7:\r\n                        window.toast.error('Некорректный пароль');\r\n                        break;\r\n                    case 8:\r\n                        window.toast.error('Этот e-mail уже занят');\r\n                        break;\r\n                    case 9:\r\n                        window.toast.error('Неверные логин и пароль');\r\n                        break;\r\n                    default:    \r\n                        window.toast.error('Прочие ошибки');\r\n                }\r\n            }\r\n        }).catch(error => console.log('error', error));\r\n};\r\n\r\nexport const updateUser = data => (dispatch, getState) => {\r\n    dispatch(setPending('user', true));\r\n    const access_token = getState().token;\r\n    fetch(url + 'me/update', params({...data, access_token}))\r\n        .then(r => r.json())\r\n        .then(data => {\r\n            dispatch(setPending('user', false));\r\n            if (!data.error) {\r\n                dispatch({\r\n                    type: actionTypes.USER_UPDATE,\r\n                    data: data,\r\n                });\r\n                window.toast.success('Информация обновлена');\r\n            } else {\r\n                switch (data.error.code) {\r\n                    case 3:\r\n                        window.toast.error('Неверные пользовательские данные');\r\n                        break;\r\n                    default:    \r\n                        window.toast.error('Прочие ошибки');\r\n                }\r\n            }\r\n        }).catch(error => console.log('error', error));\r\n};\r\n\r\n// 2020-06-19 этот метод почему то странно обрабатывается на сервеер, ошибок не пишет, но по моему logout не делает\r\nexport const logOut = () => (dispatch, getState) => {\r\n    fetch(urlWithParams(url + 'me/logout', {access_token: getState().token})).then((res) => {\r\n        console.log(\"logout успешно res=\", res)\r\n        dispatch({\r\n            type: actionTypes.USER_LOGOUT,\r\n        });\r\n        dispatch({\r\n            type: actionTypes.TOKEN_SET,\r\n            token: null,\r\n        });\r\n        document.cookie = '';\r\n    })\r\n};\r\n\r\n// 2020-06-19 альтернативный getLogout1  метод четко делает выход из сессии на сервере\r\nexport const logout1 = (token) => (dispatch, getState) => {\r\n    console.log('token=', token);\r\n    getLogout1(token).then((res) => {\r\n        // отписаться от Rabbit\r\n        deactivateWebSocket()\r\n        console.log(\"logout1 успешно res=\", res)\r\n\r\n        dispatch({\r\n            type: actionTypes.USER_LOGOUT,\r\n        });\r\n        dispatch({\r\n            type: actionTypes.TOKEN_SET,\r\n            token: null,\r\n        });\r\n        document.cookie = '';\r\n        saveState( store.getState());  // сохранение state в localStorage\r\n    }).catch(error => console.log('Ошибка при выходе', error));\r\n};\r\n\r\nexport const fetchUserData = (init = false) => (dispatch, getState) => {\r\n    if (!init && !getState().token) return;\r\n\r\n    const pendingKey = init ? 'init' : 'user';\r\n    dispatch(setPending(pendingKey, true));\r\n    fetch(urlWithParams(url + 'client', {access_token: getState().token}), params({}, 'GET'))\r\n        .then(r => r.json())\r\n        .then(data => {\r\n            if (!data.error) {\r\n                dispatch({\r\n                    type: actionTypes.USER_UPDATE,\r\n                    data\r\n                });\r\n            }\r\n            dispatch(setPending(pendingKey, false));\r\n        })\r\n        .catch(error => console.log('error', error));\r\n};\r\n\r\n// Усовершенствованный и упрощенный вход. Используется сессионный куки\r\n// token не нужен\r\nexport const fetchUserData2 = (init = false) => (dispatch, getState) => {\r\n    const pendingKey = init ? 'init' : 'user';\r\n    dispatch(setPending(pendingKey, true));\r\n// по моему параметр токен здесь вообще не нужен, идентификация идет по куки\r\n    fetch(url + 'user')\r\n        .then(r => r.json())\r\n        .then(data => {\r\n            if (!data.error) {\r\n                dispatch({\r\n                    type: actionTypes.USER_UPDATE,\r\n                    data\r\n                });\r\n            }\r\n            dispatch(setPending(pendingKey, false));\r\n        })\r\n        .catch(error => console.log('error', error));\r\n};\r\n\r\n// Activity actions\r\nexport const fetchActivities = () => dispatch => {\r\n    dispatch(setPending('activities', true));\r\n    fetch(url + 'activity', params({}, 'GET'))\r\n        .then(r => r.json())\r\n        .then(data => {\r\n            dispatch(setPending('activities', false));\r\n            if (!data.error) {\r\n                dispatch({\r\n                    type: actionTypes.ACTIVITY_UPDATE,\r\n                    data\r\n                });\r\n            }\r\n        })\r\n        .catch(error => console.log('error', error));\r\n};\r\n\r\n// Basket items\r\nexport const fetchBasketItems = () => (dispatch, getState) => {\r\n    dispatch(setPending('basket', true));\r\n//    fetch(urlWithParams(url + 'basket', {access_token: getState().token}), params({}, 'GET'))\r\n      return fetch(urlWithParams(url + 'basket', {access_token: getState().token}), params({}, 'GET'))\r\n        .then(r => r.json())\r\n        .then(data => {\r\n            dispatch(setPending('basket', false));\r\n            if (!data.error) {\r\n                dispatch({\r\n                    type: actionTypes.setBasketItems,\r\n                    items: data,\r\n                });\r\n            }\r\n// akayerov 14/02/2020\r\n            return data;\r\n\r\n        })\r\n        .catch(error => console.log('error', error));\r\n};\r\n\r\nexport const addBasketItem = (activity, activity_tariff_id = null) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: actionTypes.addBasketItem,\r\n        activity,\r\n        activity_tariff_id\r\n    });\r\n\r\n    dispatch(updateBasket());\r\n};\r\n\r\nexport const updateBasketItem = (id, count) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: actionTypes.updateBasketItem,\r\n        id,\r\n        count,\r\n    });\r\n    dispatch(updateBasket());\r\n};\r\n\r\n// akayerov add 09/12/2019\r\nexport const setBasketItems = (items) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: actionTypes.setBasketItems,\r\n        items\r\n    });\r\n    dispatch(updateBasket());\r\n};\r\n\r\n// akayerov add 09/12/2019\r\nexport const clearBasketPromo = (items) => (dispatch, getState) => {\r\n    console.log('action setBasketItems items= ', items);\r\n    dispatch({\r\n        type: actionTypes.clearBasketPromo,\r\n        items\r\n    });\r\n//    dispatch(updateBasket());\r\n};\r\n\r\nexport const changeTariffsToTandem = (to_tandem, id, activity_id) => (dispatch, getState) => {\r\n    const body = params({\r\n        id,\r\n        activity_id,\r\n        to_tandem,\r\n        access_token: getState().token\r\n    });\r\n    fetch(url + 'basket/change', body)\r\n        .then(r => r.json())\r\n        .then(data => {\r\n            dispatch({\r\n                type: actionTypes.changeBasketItemsTariffs,\r\n                payload: data\r\n            });\r\n        })\r\n        // Fetch items again to confirm changes.\r\n        // Was set as a microtask to make sure that it will be evluated\r\n        // after all previous changes.\r\n        .then(() => dispatch(fetchBasketItems()))\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\nexport const updateBasket = throttle(() => (dispatch, getState) => {\r\n    // update basket every 2000 ms\r\n    if (!getState().token) return false;\r\n    const items = assembleBasketItemsRequest(getState().basketItems);\r\n    const data = {\r\n        clear: true,\r\n        activities: items,\r\n    };\r\n    return fetch(url + 'basket', params({...data, access_token: getState().token}))\r\n        .then(r => r.json())\r\n        .then(data => {\r\n            if (data.error && data.error.code == 1) {\r\n                window.toast.error('Не удалось добавить в корзину все активности. Повторите попытку позже');\r\n            }\r\n        })\r\n        .catch(error => console.log('error', error));\r\n}, 2000);\r\n\r\nexport const removeBasketItem = id => (dispatch, getState) => {\r\n    dispatch({\r\n        type: actionTypes.removeBasketItem,\r\n        id\r\n    });\r\n    dispatch(updateBasket());\r\n};\r\n\r\nexport const checkoutBasket = (reservationData, history) => (dispatch, getState) => {\r\n    const items = assembleBasketItemsRequest(getState().basketItems);\r\n    console.log('items-to-checkout', items);\r\n    console.log('checkoutBasket: items=', items);\r\n    const token = getState().token;\r\n    const updateBasketData = {\r\n        clear: true,\r\n        activities: items,\r\n        access_token: token,\r\n    };\r\n    if (token) {\r\n        dispatch(setPending('checkout', true));\r\n//        console.log('updateBasketData=', updateBasketData);\r\n        \r\n        return fetch(url + 'basket', params(updateBasketData))\r\n            .then(r => r.json())\r\n            .then(data => {\r\n                if (!data.error) {\r\n                    return fetch(url + 'basket/checkout', params({\r\n                        reservations: reservationData, access_token: token\r\n                    }));\r\n                } else {\r\n                    dispatch(setPending('checkout', false));\r\n                    window.toast.error('Произошла техническая ошибка. Попробуйте позже.');\r\n                }\r\n            })\r\n            .then(r => r.json())\r\n            .then(data => {\r\n                dispatch(setPending('checkout', false));\r\n                if (data.payment_url && !data.error) {\r\n                    window.location = data.payment_url;\r\n                } else {\r\n                    switch (data.error.code) {\r\n                        case 3:\r\n                            window.toast.error('Некорректная дата');\r\n                            break;\r\n                        case 4:\r\n                            window.toast.error('Некорректный временной слот');\r\n                            break;\r\n                        case 5:\r\n                            window.toast.error('Это время уже занято. Выберите другое');\r\n                            break;\r\n                        case 6:\r\n                            window.toast.error('Не удалось сгенерировать билеты');\r\n                            break;\r\n                        case 7:\r\n                            window.toast.error('Не удалось сохранить информацию о бронировании');\r\n                            break;\r\n                        default:    \r\n                            window.toast.error('Прочие ошибки');\r\n                        }\r\n                }\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    } else {\r\n        fetch(url + 'basket/unauthenticated-checkout', params({\r\n            email: reservationData,\r\n            basket_items: items,\r\n            access_token: token\r\n        }))\r\n            .then(r => r.json())\r\n            .then(data => {\r\n                if (data.payment_url && !data.error) {\r\n                    dispatch({\r\n                        type: actionTypes.setBasketItems,\r\n                        items: [],\r\n                    });\r\n\r\n                    window.location = data.payment_url;\r\n                } else {\r\n                    switch (data.error.code) {\r\n                        case 6:\r\n                            window.toast.error('Не удалось сгенерировать билеты');\r\n                            break;\r\n                        case 8:\r\n                            window.toast.error('Некорректный e-mail');\r\n                            break;\r\n                        case 9:\r\n                            window.toast.error('Не удалось доставить письмо на указанный e-mail');\r\n                            break;\r\n                        default:    \r\n                            window.toast.error('Прочие ошибки');\r\n                        }\r\n                }\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * refund tickets  \r\n * @param {*} idOrder \r\n */\r\n\r\nexport const refundTickets = (ticketId, cb = null) => (dispatch, getState) => {\r\n//    console.log('refund idOrder= ', ticketId, cb);\r\n    const token = getState().token;\r\n    if (token) {\r\n        dispatch(setPending('tickets', true));\r\n//        console.log('autorization refund OK, url=', url + 'ticket/' + ticketId + '/return');\r\n        return fetch(url + 'ticket/' + ticketId + '/return', params({ }))\r\n            .then(r => r.json())\r\n            .then(data => {\r\n//                console.log('refundTickets: success data=', data);\r\n                \r\n                dispatch(setPending('tickets', false));\r\n                if (data.error) {\r\n                    switch (data.error.code) {\r\n                        case 8:\r\n                            window.toast.error('Средства уже возвращались');\r\n                            break;\r\n                        default:\r\n                            window.toast.error('Возникла ошибка при возврате билетов');\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    window.toast.success('Возврат денег принят');\r\n                    if( cb ) { \r\n                        cb();\r\n                    }    \r\n                }    \r\n            })\r\n            .catch(error => { \r\n                window.toast.error('В процессе возврата возникла ошибка');\r\n                console.log('error', error)\r\n             })\r\n             \r\n\r\n    } else {\r\n\r\n    }\r\n};\r\n\r\n\r\n\r\n// Tickets\r\n\r\nexport const fetchTickets = () => (dispatch, getState) => {\r\n    if (!getState().user) return;\r\n\r\n    dispatch(setPending('tickets', true));\r\n    fetch(urlWithParams(url + 'ticket', {access_token: getState().token}), params({}, 'GET'))\r\n        .then(r => r.json())\r\n        .then(data => {\r\n            dispatch(setPending('tickets', false));\r\n            if (!data.error) {\r\n                dispatch({\r\n                    type: actionTypes.setTickets,\r\n                    data\r\n                });\r\n            }\r\n        })\r\n        .catch(error => console.log('error', error));\r\n};\r\n\r\n// Reserved dates\r\n\r\nexport const fetchReservedDates = (activityId, from, to) => (dispatch, getState) => {\r\n    if (!getState().user || !moment.isMoment(from) || !moment.isMoment(to) || !from.isValid() || !to.isValid()) return;\r\n\r\n    dispatch(setPending('reservedDates', true));\r\n    fetch(urlWithParams(url + 'activity/reserved-dates', {\r\n        id: activityId,\r\n        from, to\r\n    }), params({}, 'GET'))\r\n        .then(r => r.json())\r\n        .then(data => {\r\n            dispatch(setPending('reservedDates', false));\r\n            if (!data.error) {\r\n                dispatch({\r\n                    type: actionTypes.setReservedDate,\r\n                    activityId,\r\n                    dates: data,\r\n                })\r\n            } else {\r\n                switch (data.error.code) {\r\n                    case 1:\r\n                        window.toast.error('Активность не найдена');\r\n                        break;\r\n                    case 2:\r\n                        window.toast.error('Некорректные даты');\r\n                        break;\r\n                    default:    \r\n                        window.toast.error('Прочие ошибки');\r\n                }\r\n            }\r\n        });\r\n};\r\n\r\n\r\n// Reservation timers\r\n\r\nexport const fetchTimers = () => dispatch => {};\r\n\r\nexport const addReservationTimer = reservationId => ({\r\n    type: actionTypes.addReservationTimer,\r\n    reservationId,\r\n    expirationTime: (new Date()).valueOf() + 5 * 60 * 1000,\r\n});\r\n\r\nexport const removeReservationTimer = reservationId => ({\r\n    type: actionTypes.removeReservationTimer,\r\n    reservationId\r\n});\r\n\r\n\r\n// Modals\r\n\r\nexport const updateModal = (type, data) => ({\r\n    type: actionTypes.updateModal,\r\n    modalType: type,\r\n    data,\r\n});\r\n\r\n// Printing templates\r\n\r\nexport const setPrintingTemplate = template => ({\r\n    type: actionTypes.setPrintingTemplate,\r\n    template,\r\n});\r\n\r\n// akayerov Add array Modals\r\nexport const addModal = (type, data) => ({\r\n    type: actionTypes.addModal,\r\n    modalType: type,\r\n    data,\r\n});\r\n\r\n// akayerov Add array Modals\r\nexport const closeModal = () => ({\r\n    type: actionTypes.closeModal,\r\n});\r\n\r\n// Activity actions\r\nexport const fetchClients = ( parameter ) => dispatch => {\r\n    console.log('fetchClients'); \r\n\r\n    dispatch(setPending('clients', true));\r\n\r\n//    fetch(url + 'client', params(parameter, 'GET'))\r\n//    fetch(urlWithParams(url + 'client', parameter))\r\n//        .then(r => r.json())\r\n    getClients()\r\n        .then(data => {\r\n            dispatch(setPending('clients', false));\r\n            if (!data.error) {\r\n                console.log('fetchClients dispatch actionTypes.CLIENT_UPDATE'); \r\n                dispatch({\r\n                    type: actionTypes.CLIENT_UPDATE,\r\n                    data\r\n                });\r\n            }\r\n        })\r\n        .catch(error => console.log('error', error));\r\n};\r\n\r\n// 2021-02-09\r\n// Pusher Event\r\nexport const setEvent = (data) => dispatch => {\r\n                console.log('setEvent Action', data);\r\n                dispatch({\r\n                    type: actionTypes.EVENT_SET,\r\n                    data\r\n                });\r\n            \r\n};\r\n\r\n// akayerov Add Socket Event\r\nexport const addWebSocketEvent = (type, data) => ({\r\n    type: actionTypes.WEB_SOCKET,\r\n    data,\r\n});\r\n","D:\\laravel\\www\\frontend_react\\src\\elements\\MaterialUI\\Tree\\TreeControlled.js",[],"D:\\laravel\\www\\frontend_react\\src\\elements\\Inputs.jsx",["269"],"import React from 'react';\r\nimport uuid from 'uuid';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const Input = ({label, placeholder, children, inputComponent: InputComponent = 'input', ...props}) => {\r\n//    const id = uuid.v4();\r\n    const id = uuidv4(); \r\n    const labelText = label || placeholder || '';\r\n    const labelClass = props.value !== undefined && props.value.length > 0 ? 'used floating' : 'floating';\r\n    return (\r\n        <div className=\"rowmy\">\r\n            <InputComponent {...props} id={id} />\r\n            {labelText && <label className={labelClass} htmlFor={id}>{labelText}</label>}\r\n            {props.required && <div className=\"req\" />}\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const YellowInput = props => <Input {...props} className={'yellow-input ' + props.className} />;\r\nexport const GrayInput = props => <Input {...props} className={'gray-input ' + props.className} />;\r\nexport const WhiteInput = props => <Input {...props} className={'white-input ' + props.className} />;\r\n\r\nexport default Input;\r\n","D:\\laravel\\www\\frontend_react\\src\\icons\\Lock.jsx",[],"D:\\laravel\\www\\frontend_react\\src\\pages\\LarClientPage.jsx",["270","271"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport {MediumHourGlass} from '../elements/Loaders';\r\nimport debounce from 'lodash/debounce';\r\n\r\nimport { Button } from '@material-ui/core';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { getClients, getTestHello } from '../api';\r\n\r\n\r\nconst columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'name', headerName: 'Название', width: 350 },\r\n    { field: 'city.name', headerName: 'Город', width: 130 },\r\n  ];\r\n \r\nclass GridPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clients: []\r\n        }\r\n\r\n    }\r\n\r\n // с использованием async/await   \r\n    async loadClients() {\r\n        console.log('load Laravel clients');\r\n        const dateStart = new Date();\r\n/* Рабочий вариант с promise\r\n        getClients().then((data=> {\r\n            console.log('getclients=', data, ((new Date())-dateStart) / 1000);\r\n            this.setState({clients: data});\r\n        }))\r\n        .catch(error => {\r\n            console.log('LarClientPage Error load clients');\r\n            console.log(error.response);\r\n            this.setState({ clients: [] });\r\n        })\r\n*/        \r\n        try {\r\n            const data = await getClients();\r\n            console.log('getclients=', data, ((new Date()) - dateStart) / 1000);\r\n            this.setState({ clients: data });\r\n            \r\n        } catch (error) {\r\n            window.toast.error(error);\r\n            console.log('LarClientPage Error load clients');\r\n            console.log(error.response);\r\n            this.setState({ clients: [] });\r\n        }\r\n    }\r\n    getTestHello() {\r\n        console.log('load test request');\r\n        const dateStart = new Date();\r\n        getTestHello().then((data=> {\r\n            console.log('getTestHello=', ((new Date())-dateStart) / 1000);\r\n        }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadClients();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content content-924\">\r\n                <ContentTitle className=\"booking-title\">\r\n                    Grid Table Material UI 2 Лар\r\n                </ContentTitle>\r\n                <div style={{ height : '70vh'}}>\r\n                  <DataGrid rows={this.state.clients} columns={columns} pageSize={5} checkboxSelection />\r\n                </div>\r\n                <Button color=\"primary\" onClick={this.getTestHello}>button 1</Button>\r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n    }),\r\n    dispatch => ({\r\n    })\r\n)(GridPage);\r\n","D:\\laravel\\www\\frontend_react\\src\\ModalManager.js",["272"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { updateModal, closeModal } from './redux/actions';\r\n\r\n// modals\r\n/*\r\nimport Template from './modals/Template';\r\nimport DeleteItem from './modals/DeleteItem';\r\nimport EditDirectory from './modals/EditDirectory';\r\nimport TemlateReport from './modals/TemlateReport';\r\nimport MultiEditTicket from './modals/MultiEditTicket';\r\n*/\r\nimport Warning from './modals/Warning';\r\nimport EmptyView from './modals/EmptyView';\r\n\r\nimport { useSpring, animated } from 'react-spring'\r\n\r\n//import ModalOverlay from './modals/ModalOverlay';\r\nimport ModalOverlay from './modals/ModalOverlayHook';\r\n\r\nimport map from 'lodash/map';\r\n\r\n\r\nexport const modalTypes = {\r\n//    template: Template,\r\n//    deleteItem: DeleteItem,\r\n    warning: Warning,\r\n    emptyView: EmptyView,\r\n//    editDirectory: EditDirectory,\r\n//    temlateReport: TemlateReport,\r\n//    multiEditTicket: MultiEditTicket\r\n};\r\n\r\nconst getModal = type => {\r\n    if (modalTypes[type] !== undefined) return modalTypes[type];\r\n    return null;\r\n};\r\n\r\nconst ModalManager = ({ modals, ...props }) => {\r\n    const SpringProps = useSpring({ opacity: 1, from: { opacity: 0 } });\r\n\r\n\r\n    return (\r\n        <animated.div style = { SpringProps }>\r\n            {modals.length > 0 && <ModalOverlay close={props.close} key={1} />}\r\n\r\n\r\n            {map(modals, (item, i) => {\r\n                const Modal = getModal(item.modalType);\r\n                console.log('Modal=', item.modalType );\r\n                return (\r\n                    <Modal {...props} {...item} key={i} />\r\n                )\r\n            }\r\n\r\n            )}\r\n         </animated.div>   \r\n    );\r\n};\r\n\r\n\r\nexport default connect(\r\n    state => ({\r\n        type: state.modal.type,\r\n        data: state.modal.data,\r\n        modals: state.modals,\r\n    }),\r\n    dispatch => ({\r\n        close: () => dispatch(closeModal(null, null))\r\n    })\r\n)(ModalManager);","D:\\laravel\\www\\frontend_react\\src\\layout\\NavigationBarMenu2.jsx",["273","274","275","276","277","278","279"],"import ReactDOM from 'react-dom'\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst containerStyle = { height: '65px' };\r\n\r\nclass NavigationBarMenu2 extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popup: false\r\n        };\r\n        this.onChangePopup = this.onChangePopup.bind(this);\r\n        this.onChangeToogle = this.onChangeToogle.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    componentWillUnmount() {\r\n    }\r\n    \r\n    onChangePopup( value) {\r\n      if( this.state.popup != value) { \r\n          console.log('onChangePopup Value=', value);\r\n          this.setState({ popup: value })\r\n      }    \r\n    }\r\n    onChangeToogle(value) {\r\n        this.setState({ popup: !this.state.popup })\r\n    }\r\n    \r\n    render() {\r\n        console.log('render  state.popup=', this.state.popup);\r\n\r\n        return (\r\n            <div style={containerStyle}>\r\n                    {\r\n                        this.props.user && (\r\n                            <div className=\"nav\"  style={{ zIndex:'20'}} key={1}>\r\n                                <div className=\"container\">\r\n                                    <ul className=\"navbar_menu\">\r\n                                        <li><Link to=\"/\">Главная</Link></li>\r\n                                        <li><Link to=\"/clients\">Ларав_Клиенты </Link></li>\r\n                                        <li><Link to=\"/huki\">Хуки</Link></li>\r\n                                        <li><Link to=\"/huki_redux\">Хуки+Redux</Link></li>\r\n                                        <li><Link to=\"/huki_redux2\">Хуки+Redux2</Link></li>\r\n                                        <li><Link to=\"/websocket\">WebSocket</Link></li>\r\n                                        <li><a href=\"#\">Тестовые</a>\r\n                                            <ul>\r\n                                                <li><Link to=\"/treepage_c\">Деревья Custom</Link></li>\r\n                                                <li><Link to=\"/treepage_m\">Деревья Multi</Link></li>\r\n                                                <li><Link to=\"/treepage_ctrl\">Деревья контролируемые</Link></li>\r\n                                                <li><a href=\"#\">Заказы</a></li>\r\n                                                <li><a href=\"#\">Задания</a></li>\r\n                                                <li><a href=\"#\">Перевозки</a></li>\r\n                                            </ul>\r\n                                        </li>\r\n                                        {this.props.user.is_admin && <li><Link to=\"/testapi\">Администратор</Link></li>}\r\n                                        <li><a href=\"#\">О нас</a></li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        user: state.user,\r\n    })\r\n)(NavigationBarMenu2);\r\n","D:\\laravel\\www\\frontend_react\\src\\pages\\Reg\\Form.jsx",["280","281","282","283","284","285","286","287","288","289","290","291","292","293"],"import ReactDOM from 'react-dom'\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport InputMask from 'react-input-mask';\r\n\r\nimport {getCountries, getCities} from '../../api';\r\nimport {regUser} from '../../redux/actions';\r\nimport SexPicker from '../../elements/SexPicker';\r\nimport {GrayInput} from '../../elements/Inputs';\r\nimport {DatePicker} from '../../elements/DatePicker';\r\nimport moment from 'moment';\r\nimport debounce from 'lodash/debounce';\r\nimport AutocompleteList from '../../elements/AutocompleteList.jsx';\r\nimport ContentTitle from '../../layout/ContentTitle';\r\n\r\nconst PhoneInput = props => <InputMask {...props} mask=\"+9 (999) 999 99 99\" maskChar=\"*\" />;\r\nconst DateMaskedInput = props => <InputMask {...props} mask=\"99.99.9999\" maskChar=\" \" />;\r\n\r\nclass DateInput extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <GrayInput type=\"text\" placeholder=\"Дата рождения\" value={this.props.value} onClick={this.props.onClick}\r\n                       onChange={this.props.onChange} inputComponent={DateMaskedInput} required />\r\n        );\r\n    }\r\n}\r\n\r\nconst emailPattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\nconst validators = {\r\n    password: {\r\n        isValid: p => p && p.length >= 5,\r\n        error: 'Пароль должен содержать не менее 5 символов',\r\n    },\r\n    name: {\r\n        isValid: p => p && p.length > 0,\r\n        error: 'Не указано Имя',\r\n    },\r\n    surname: {\r\n        isValid: p => p && p.length > 0,\r\n        error: 'Не указана Фамилия',\r\n    },\r\n//    birth_date: {\r\n//        isValid: d => moment.isMoment(d) && d.isValid() && d.isBefore(moment()),\r\n//        error: 'Некорректная дата рождения',\r\n//    },\r\n    phone: {\r\n        isValid: p => p && p.length > 0,\r\n        error: 'Не указан Телефон',\r\n    },\r\n    emailPattern: {\r\n        isValid: e => emailPattern.test(e),\r\n        error: 'Некорректный e-mail',\r\n    },\r\n};\r\n\r\nclass Form extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            status: null,\r\n            sex: null,\r\n            email: '',\r\n            password: '',\r\n            repeatPassword: '',\r\n            name: '',\r\n            surname: '',\r\n            middle_name: '',\r\n            country: '',\r\n            city: '',\r\n//            birth_date: null,\r\n            birth_date: '',\r\n            phone: '',\r\n            is_admin: false,\r\n\r\n            hasMiddleName: true,\r\n            showPasswords: false,\r\n        };\r\n\r\n        this.initialBirthDate = moment().year(1991);\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.isValid = this.isValid.bind(this);\r\n        this.handleChangeName = this.handleChangeName.bind(this);\r\n        this.toggleHasMiddleName = this.toggleHasMiddleName.bind(this);\r\n        this.toggleRoles = this.toggleRoles.bind(this);\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n        this.setWrapperRef = this.setWrapperRef.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n        this.setState({ status: this.props.status });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    setWrapperRef(node, wrapper) {\r\n        switch (wrapper) {\r\n            case 'country':\r\n                this.wrapperCountryRef = node;\r\n                break;\r\n            case 'city':\r\n            default:\r\n                this.wrapperCityRef = node;\r\n                break;\r\n        }\r\n    }\r\n\r\n    isValid() {\r\n        let hasError = false;\r\n        if (this.state.password !== this.state.repeatPassword) {\r\n            window.toast.error('Пароли не совпадают');\r\n            hasError = true;\r\n        }\r\n\r\n        for (let name in this.state) {\r\n            if (!validators[name]) continue;\r\n            if (validators[name].isValid(this.state[name])) continue;\r\n\r\n            if (validators[name].error) window.toast.error(validators[name].error);\r\n            hasError = true;\r\n        }\r\n\r\n        return !hasError;\r\n    }\r\n\r\n    onSubmit(event) {\r\n        event.preventDefault();\r\n        if (!this.isValid()) return;\r\n/*\r\n        if (!this.state.countries.find(country => country.title === this.state.country)) {\r\n            window.toast.error('Пожалуйста, укажите страну из списка');\r\n            return;\r\n        }\r\n        if (!this.state.cities.find(city => city.title === this.state.city)) {\r\n            window.toast.error('Пожалуйста, укажите город из списка');\r\n            return;\r\n        }\r\n*/\r\n      \r\n        this.state.birth_date = moment(this.state.birth_date);\r\n        this.props.submit(this.state);\r\n        if (this.props.history) this.props.history.goBack();\r\n    }\r\n\r\n    handleChangeName(event) {\r\n        let value = event.target.value.toString().replace(/^\\s*/g, '');\r\n        if (value.length) value = value[0].toLocaleUpperCase() + value.slice(1);\r\n        const name = event.target.name;\r\n\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    handleClickOutside(e) {\r\n        const hasOwnHandler = e.className === 'autocomplete-item' || e.className === 'autocomplete';\r\n        if (hasOwnHandler) return;\r\n\r\n    }\r\n\r\n    toggleHasMiddleName() {\r\n        this.setState(prevState => ({\r\n            hasMiddleName: !prevState.hasMiddleName,\r\n            middle_name: !prevState.hasMiddleName ? prevState.middle_name : '',\r\n        }));\r\n    }\r\n\r\n    toggleRoles() {\r\n        this.setState(prevState => ({\r\n            is_admin: !prevState.is_admin,\r\n        }));\r\n    }\r\n\r\n\r\n\r\n    toggleShowPasswords() {\r\n        this.setState(prevState => ({\r\n            showPasswords: !prevState.showPasswords,\r\n        }));\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const pending = this.props.pending;\r\n        const {hasMiddleName, showPasswords, is_admin } = this.state;\r\n\r\n        return (\r\n            <div className=\"content content-100\">\r\n                <ContentTitle className=\"reg-title\">Регистрация</ContentTitle>\r\n\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"white-content reg-form-step-2\">\r\n                        <div className=\"form login-form\">\r\n                            <GrayInput type=\"email\" placeholder=\"E-mail\" required\r\n                                    value={this.state.email} onChange={e => this.setState({email: e.target.value})} />\r\n\r\n                            <GrayInput type={showPasswords ? 'text' : 'password'} placeholder=\"Пароль\" required\r\n                                    value={this.state.password}\r\n                                    onChange={e => this.setState({password: e.target.value})}>\r\n                                <a className={`show-password-link ${showPasswords ? 'disabled' : ''}`}\r\n                                style={{left: 263, top: -4}}\r\n                                onClick={this.toggleShowPasswords}>\r\n                                    Показать\r\n                                </a>\r\n                            </GrayInput>\r\n                            <GrayInput type={showPasswords ? 'text' : 'password'} placeholder=\"Повторить пароль\" required\r\n                                    value={this.state.repeatPassword}\r\n                                    onChange={e => this.setState({repeatPassword: e.target.value})} />\r\n\r\n                            <GrayInput type=\"text\" placeholder=\"Фамилия\" required value={this.state.surname}\r\n                                    onChange={this.handleChangeName} name=\"surname\" />\r\n                            <GrayInput type=\"text\" placeholder=\"Имя\" required value={this.state.name}\r\n                                    onChange={this.handleChangeName} name=\"name\" />\r\n                            <GrayInput type=\"text\" placeholder=\"Отчество\" value={this.state.middle_name}\r\n                                    onChange={this.handleChangeName} name=\"middle_name\" disabled={!hasMiddleName}\r\n                                    required={hasMiddleName} />\r\n                            <div className=\"radio\" onClick={this.toggleHasMiddleName}\r\n                                style={{padding: 0, marginBottom: 32, marginTop: -10}}>\r\n                                <input type=\"checkbox\" onChange={this.toggleHasMiddleName} checked={!hasMiddleName} />\r\n                                <label style={{fontSize: '1.5rem'}}>Нет отчества</label>\r\n                            </div>\r\n\r\n                            <div className=\"rowmy-date-fix\">\r\n{/*\r\n                                <DatePicker customInput={<DateInput />} selected={this.state.birth_date}\r\n                                            onChange={date => this.setState({birth_date: date})} showYearDropdown\r\n                                            showMonthDropdown dropdownMode=\"select\" maxDate={moment()} />\r\n*/}                                             \r\n                                <GrayInput type=\"date\" placeholder=\"Дата рожденияя\" required value={this.state.birth_date}\r\n\r\n                                onChange={e => {  \r\n                                                     e.persist();\r\n                                                     console.log('date input=', e);\r\n                                                     this.setState({ birth_date: e.target.value })\r\n                                \r\n                                                  }} name=\"dateb\" />\r\n                            </div>\r\n\r\n                            <GrayInput type=\"text\" placeholder=\"Телефон\" inputComponent={PhoneInput} required\r\n                                    value={this.state.phone}\r\n                                    onChange={e => this.setState({phone: e.target.value.replace(/\\D*/g, '')})} />\r\n\r\n                            <div className=\"radio\" onClick={this.toggleRoles}\r\n                                style={{ padding: 0, marginBottom: 32, marginTop: -10 }}>\r\n                                <input type=\"checkbox\" onChange={this.toggleRoles} checked={is_admin} />\r\n                                <label style={{ fontSize: '1.5rem' }}>Администратор</label>\r\n                            </div>\r\n\r\n                            <div className=\"rem\">\r\n                                <img src=\"img/req.svg\" />&nbsp;&nbsp;&nbsp; Поля обязательные для заполнения\r\n                            </div>\r\n\r\n                            <div className=\"row-button\">\r\n                                <span className=\"yellow button\" onClick={this.props.onCancel}\r\n                                    style={{margin: '0 2px'}}>Отмена</span>\r\n                                <input type=\"submit\" defaultValue=\"Регистрация\" disabled={pending} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>    \r\n        );\r\n    }\r\n\r\n}\r\n\r\nForm.propTypes = {\r\n//    onCancel: PropTypes.func.isRequired,\r\n//    status: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default connect(\r\n    state => ({\r\n        pending: state.pending.user,\r\n    }),\r\n    dispatch => ({\r\n        submit: data => {\r\n            dispatch(regUser({\r\n                ...data,\r\n                birth_date: data.birth_date.format('YYYY-MM-DD'),\r\n            }));\r\n        },\r\n    }),\r\n)(Form);\r\n","D:\\laravel\\www\\frontend_react\\src\\modals\\ModalOverlay.js",[],"D:\\laravel\\www\\frontend_react\\src\\elements\\AutocompleteList.jsx",[],"D:\\laravel\\www\\frontend_react\\src\\localStorage.js",[],"D:\\laravel\\www\\frontend_react\\src\\pages\\ResetPassword.jsx",[],"D:\\laravel\\www\\frontend_react\\src\\layout\\TestAPI.jsx",[],"D:\\laravel\\www\\frontend_react\\src\\App.js",["294","295"],"/* Исходный код компонента\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          My create-react-app\r\n        </p>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n*/\r\nimport './css/main.css';\r\nimport './css/react.css';\r\n\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n//import { CSSTransitionGroup } from 'react-transition-group';\r\n\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { fetchUserData, fetchUserData2 } from './redux/actions';\r\n\r\n// eslint-disable-next-line\r\nimport { routes, prefix } from './route/routes';\r\nimport AuthenticatedRoute from './route/AuthenticatedRoute2';\r\nimport UnauthenticatedRoute from './route/UnauthenticatedRoute';\r\n\r\nimport Header from './layout/Header';\r\n//import NavigationBar from 'layout/NavigationBar';\r\n//import NavigationBar from 'layout/NavigationBarMenu';\r\nimport NavigationBar from './layout/NavigationBarMenu2';\r\nimport MainContent from './layout/MainContent';\r\nimport TestAPI from './layout/TestAPI';\r\n\r\nimport LogInPage from './pages/Login';\r\nimport ResetPasswordInPage from './pages/ResetPassword';\r\nimport WithoutReg from './pages/WithoutReg';\r\nimport Reg from './pages/Reg/Form';\r\nimport Profile from './pages/Profile';\r\n//\r\nimport EmptyComponent from './pages/EmptyComponent';\r\nimport LarClientPage from './pages/LarClientPage';\r\nimport TreePageC from './pages/TreePageC';\r\nimport TreePageM from './pages/TreePageM';\r\nimport TreePageCtrl from './pages/TreePageCtrl';\r\nimport HookPage from './pages/HookPage';\r\nimport HookPageRedux from './pages/HookPageRedux';\r\nimport HookPageRedux2 from './pages/HookPageRedux2';\r\nimport WebSocketPage from './pages/WebSockerPage';\r\nimport rabbitMq from './rabbiitMq';\r\n\r\n// eslint-disable-next-line\r\nimport { getPublic, getPrivate, getClients, getUsers, getLogout1 } from './api'\r\nimport { logout1 } from './redux/actions';\r\n\r\n\r\nimport Echo from \"laravel-echo\"\r\nimport Pusher from \"pusher-js\"\r\nimport {setEvent} from \"./redux/actions\"\r\n\r\n\r\n\r\nclass App extends React.PureComponent {\r\n\r\n// eslint-disable-next-line\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  componentDidUpdate() {\r\n  }\r\n\r\n  componentWillUnmount() {\r\n  }\r\n\r\n  render() {\r\n    const auth = !!this.props.user;\r\n    //        const pending = this.state.pending || this.props.pending;\r\n    //        console.log(this.props.pending);\r\n    console.log('App render');\r\n    if(auth)\r\n      rabbitMq(this.props.user);\r\n\r\n    return (\r\n      <BrowserRouter>\r\n          <div>\r\n\r\n            <Header />\r\n            <NavigationBar />\r\n            <MainContent>\r\n              <div>\r\n              <Route render={({ location }) => {\r\n                //                                      const key = location.pathname.substr(prefix.length).split('/').filter(Boolean).slice(0, 1).join('/');\r\n                const key = location.pathname;\r\n                console.log(location, key);\r\n                return (\r\n                    <Switch key={key} location={location}>\r\n                      <Switch>\r\n                        {/* for unauthorized only  */}\r\n                        <UnauthenticatedRoute exact path={routes.index} component={LogInPage} key='1' auth={auth} fallback={routes.mainContent} />\r\n                        <UnauthenticatedRoute path={routes.auth} component={LogInPage} key='2' auth={auth} fallback={routes.mainContent} />\r\n                        <UnauthenticatedRoute path={routes.restore} component={ResetPasswordInPage} key='3' auth={auth} fallback={routes.mainContent} />\r\n                        <UnauthenticatedRoute path={routes.reg} component={Reg} auth={auth} key='4' fallback={routes.mainContent} />\r\n                        <UnauthenticatedRoute path={routes.unauth} component={WithoutReg} key='5' auth={auth} fallback={routes.mainContent} />\r\n\r\n                        <AuthenticatedRoute exact path={routes.me} component={Profile} key='6' auth={auth} fallback={routes.auth} />\r\n\r\n                        <Route exact path={routes.index} key='7' component={EmptyComponent} />\r\n\r\n                        <Route exact path={routes.mainContent} key='8' component={EmptyComponent} />\r\n                        \r\n                        <AuthenticatedRoute exact path={routes.clients} component={LarClientPage} key='108' auth={auth} fallback={routes.auth} />\r\n{/*}\r\n                        <Route exact path={routes.clients} key='108' component={LarClientPage} />  \r\n */}                        \r\n                        <Route exact path={routes.treePageCustom} key='101' component={TreePageC} />\r\n                        <Route exact path={routes.treePageMulti} key='102' component={TreePageM} />\r\n                        <Route exact path={routes.treePageCtrl} key='103' component={TreePageCtrl} />\r\n                        <Route exact path={routes.huki} key='104' component={HookPage} />\r\n                        <Route exact path={routes.huki_redux} key='105' component={HookPageRedux} />\r\n                        <Route exact path={routes.huki_redux2} key='106' component={HookPageRedux2} />\r\n                        <Route exact path={routes.websocket} key='107' component={WebSocketPage} />\r\n\r\n                        <Route exact path={routes.testAPI} key='10' component={TestAPI} />\r\n                      </Switch>\r\n                    </Switch>\r\n                )\r\n              }} />\r\n              </div>\r\n            </MainContent>\r\n          </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    token: state.token,\r\n    user: state.user,\r\n    pending: state.pending.init !== undefined ? state.pending.init : true,\r\n  }),\r\n  dispatch => ({\r\n    fetchUser: () => dispatch(fetchUserData(true)),\r\n    fetchUser2: () => dispatch(fetchUserData2(true)),\r\n    makeLogout: (token) => dispatch(logout1(token)),\r\n    setEventToStore: (data) => dispatch(setEvent(data)),\r\n  })\r\n)(App);\r\n","D:\\laravel\\www\\frontend_react\\src\\pages\\HookPage.jsx",["296","297","298","299","300","301","302"],"// Компонент в современном стиле с использованием Хуков\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport { MediumHourGlass } from '../elements/Loaders';\r\nimport debounce from 'lodash/debounce';\r\n\r\nimport { Button } from '@material-ui/core';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { getClients, getTestHello } from '../api';\r\n\r\n\r\nconst columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'name', headerName: 'Название', width: 350 },\r\n    { field: 'city.name', headerName: 'Город', width: 130 },\r\n];\r\n\r\nconst HookPage =  (props) => {\r\n\r\n    function loadClients() {\r\n        console.log('load Laravel clients');\r\n        const dateStart = new Date();\r\n        getClients().then((data => {\r\n            console.log('getclients=', data, ((new Date()) - dateStart) / 1000);\r\n            setClients( data );\r\n            setStatus('fetched');\r\n        }))\r\n    }\r\n\r\n    async function loadClients2() {\r\n        console.log('load Laravel clients');\r\n        const dateStart = new Date();\r\n        const data = await getClients();\r\n        console.log('getclients=', data, ((new Date()) - dateStart) / 1000);\r\n        setClients(data);\r\n        setStatus('fetched');\r\n    }\r\n\r\n    const [status, setStatus] = useState('idle');\r\n    const [query, setQuery] = useState('1');\r\n//    const [data, setData] = useState([]);\r\n    const [clients, setClients] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (!query) return;\r\n/*\r\n        const fetchData = async () => {\r\n            setStatus('fetching');\r\n            const response = await fetch(\r\n                `https://hn.algolia.com/api/v1/search?query=${query}`\r\n            );\r\n            const data = await response.json();\r\n            setData(data.hits);\r\n            setStatus('fetched');\r\n        };\r\n        fetchData();\r\n*/        \r\n//        loadClients();\r\n        loadClients2();\r\n\r\n    }, [query]);\r\n\r\n\r\n    return (\r\n        <div className=\"content content-924\">\r\n            <ContentTitle className=\"booking-title\">\r\n                Grid Table Material UI 2 Хуки State\r\n            </ContentTitle>\r\n            <div style={{ height: '70vh' }}>\r\n                <DataGrid rows={clients} columns={columns} pageSize={5} checkboxSelection />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n    }),\r\n    dispatch => ({\r\n    })\r\n)(HookPage);\r\n","D:\\laravel\\www\\frontend_react\\src\\pages\\HookPageRedux.jsx",["303","304","305","306","307","308","309"],"// Компонент в современном стиле с использованием Хуков Redux традиционно\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport { MediumHourGlass } from '../elements/Loaders';\r\nimport debounce from 'lodash/debounce';\r\n\r\nimport { Button } from '@material-ui/core';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { fetchClients } from '../redux/actions';\r\n\r\n\r\n\r\n\r\nconst columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'name', headerName: 'Название', width: 350 },\r\n    { field: 'city.name', headerName: 'Город', width: 130 },\r\n];\r\n\r\nconst HookPage =  (props) => {\r\n\r\n\r\n    const [status, setStatus] = useState('idle');\r\n    const [query, setQuery] = useState('1');\r\n\r\n    useEffect(() => {\r\n        if (!query) return;\r\n        props.loadClients2();\r\n\r\n    }, [query]);\r\n\r\n\r\n    return (\r\n        <div className=\"content content-924\">\r\n            <ContentTitle className=\"booking-title\">\r\n                Grid Table Material UI 2 Хуки Redux\r\n            </ContentTitle>\r\n            <div style={{ height: '70vh' }}>\r\n                <DataGrid rows={props.clients} columns={columns} pageSize={5} checkboxSelection />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        clients: state.clients,\r\n    }),\r\n    dispatch => ({\r\n        loadClients2: () => dispatch(fetchClients({}))\r\n    })\r\n)(HookPage);\r\n","D:\\laravel\\www\\frontend_react\\src\\pages\\HookPageRedux2.jsx",["310","311","312","313","314","315","316"],"// Компонент в современном стиле с использованием Хуков Redux традиционно\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n//import { connect } from 'react-redux';\r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport { MediumHourGlass } from '../elements/Loaders';\r\nimport debounce from 'lodash/debounce';\r\n\r\nimport { Button } from '@material-ui/core';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { fetchClients } from '../redux/actions';\r\n// новый стиль работы с redux\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { getMe, setNewPassword } from '../api';\r\n\r\n// модальные окнв\r\nimport { addModal, closeModal } from '../redux/actions';\r\n\r\n\r\n\r\nconst columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'name', headerName: 'Название', width: 350 },\r\n    { field: 'city.name', headerName: 'Город', width: 130 },\r\n];\r\n\r\nconst HookPage =  (props) => {\r\n\r\n\r\n    const [status, setStatus] = useState('idle');\r\n    const [query, setQuery] = useState('1');\r\n// новое от redux\r\n    const clients = useSelector(state => state.clients);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!query) return;\r\n// новое от redux\r\n        dispatch(fetchClients({}));\r\n\r\n    }, [query]);\r\n\r\n    const reload = () => {\r\n       console.log('Reload data...');\r\n        dispatch(fetchClients({}));\r\n    }\r\n    const changePassword = () => {\r\n        console.log('Изменить пароль...');\r\n        setNewPassword(\"akayerov@gmail.com\", \"987654321\");\r\n    }\r\n\r\n    const whoami = () => {\r\n        getMe().then( data => {\r\n            console.log('res=', data);\r\n        });\r\n    }\r\n    const showModal = () => {\r\n        console.log('Show modal function');\r\n        dispatch(addModal('emptyView', { activity: null }));\r\n    }\r\n\r\n    return (\r\n        <div className=\"content content-924\">\r\n            <ContentTitle className=\"booking-title\">\r\n                Grid Table Material UI 2 Хуки Redux2\r\n            </ContentTitle>\r\n            <div style={{ height: '70vh' }}>\r\n                <DataGrid rows={clients} columns={columns} pageSize={5} checkboxSelection />\r\n            </div>\r\n            <Button color=\"primary\" onClick={reload}>Обновить</Button>\r\n            <Button color=\"primary\" onClick={changePassword}>Изм Пароль</Button>\r\n            <Button color=\"primary\" onClick={whoami}>Кто я?</Button>\r\n            <Button color=\"primary\" onClick={showModal}>Диалог</Button>\r\n        </div>\r\n    );\r\n}\r\nexport default HookPage;\r\n\r\n","D:\\laravel\\www\\frontend_react\\src\\elements\\DatePicker.jsx",[],"D:\\laravel\\www\\frontend_react\\src\\layout\\MainContent.jsx",[],"D:\\laravel\\www\\frontend_react\\src\\elements\\Loaders.jsx",[],"D:\\laravel\\www\\frontend_react\\src\\pages\\EmptyComponent.jsx",["317","318","319","320"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport {MediumHourGlass} from '../elements/Loaders';\r\nimport debounce from 'lodash/debounce';\r\n\r\nimport { getSpringClients, getSpringdataJson, createLongTask } from '../api/spring'\r\n\r\nimport { Button } from '@material-ui/core';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nconst columns = [\r\n  { field: 'id', headerName: 'ID', width: 70 },\r\n  { field: 'firstName', headerName: 'First name', width: 130 },\r\n  { field: 'lastName', headerName: 'Last name', width: 130 },\r\n  {\r\n    field: 'age',\r\n    headerName: 'Age',\r\n    type: 'number',\r\n    width: 90,\r\n  },\r\n  {\r\n    field: 'fullName',\r\n    headerName: 'Full name',\r\n    description: 'This column has a value getter and is not sortable.',\r\n    sortable: false,\r\n    width: 160,\r\n    valueGetter: (params) =>\r\n      `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\r\n  },\r\n];\r\nconst columns1 = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'name', headerName: 'Название', width: 300 },\r\n    { field: 'city.name', headerName: 'Город', width: 130 },\r\n  ];\r\n  \r\nconst rows = [\r\n  { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\r\n  { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\r\n  { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\r\n  { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\r\n  { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\r\n  { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\r\n  { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\r\n  { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\r\n  { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\r\n]\r\n\r\n\r\nclass EmptyComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clients: []\r\n        }\r\n        this.loadClients = this.loadClients.bind(this);\r\n        this.getDataJson = this.getDataJson.bind(this);\r\n        this.getCreateLongTask = this.getCreateLongTask.bind(this);\r\n    }\r\n\r\n    getCreateLongTask() {\r\n        console.log('create long task');\r\n        createLongTask().then((data => {\r\n            console.log('create long task result=', data);\r\n\r\n        }))\r\n\r\n    }\r\n\r\n    getDataJson() {\r\n        console.log('get Data Json Objects');\r\n        getSpringdataJson().then((data => {\r\n            console.log('get Data Json Objects result=', data);\r\n            // const results = JSON.parse(data.result);\r\n            const results = data.result;\r\n            console.log('result=', results);\r\n            results.forEach(element => {\r\n                console.log('element=', element);\r\n                const date1 = new Date(element.createdDate);\r\n                console.log('date =', element.createdDate);\r\n                console.log('date1 =', date1);\r\n            });            \r\n\r\n        }))\r\n    }\r\n\r\n    loadClients() {\r\n        console.log('load clients');\r\n        getSpringClients().then((data=> {\r\n            console.log('getclients=', data);\r\n            this.setState({clients: data});\r\n        }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadClients();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"content content-924\">\r\n                <ContentTitle className=\"booking-title\">\r\n                    Grid Table Material UI\r\n                </ContentTitle>\r\n                <div style={{ height : '70vh'}}>\r\n                <div style={{ height : '90%'}}>\r\n                    <DataGrid rows={this.state.clients} columns={columns1} pageSize={5} checkboxSelection />\r\n                </div>\r\n                <Button color=\"primary\">button 1</Button>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.getCreateLongTask}>Create Task</Button>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.getDataJson}>Get RES Task Json</Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n    }),\r\n    dispatch => ({\r\n    })\r\n)(EmptyComponent);\r\n","D:\\laravel\\www\\frontend_react\\src\\icons\\Man.jsx",[],"D:\\laravel\\www\\frontend_react\\src\\route\\AuthenticatedRoute2.jsx",[],"D:\\laravel\\www\\frontend_react\\src\\api\\spring\\index.js",[],"D:\\laravel\\www\\frontend_react\\src\\pages\\WithoutReg.jsx",[],"D:\\laravel\\www\\frontend_react\\src\\layout\\Header.jsx",["321"],"import React from 'react';\r\nimport {CSSTransitionGroup} from 'react-transition-group';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport ProfileBar from './ProfileBar';\r\n\r\nconst Header = props => (\r\n    <div className=\"header-wrapper\">\r\n        {/*<CSSTransitionGroup transitionName=\"fade\" transitionAppear={true} transitionAppearTimeout={600}*/}\r\n                            {/*transitionEnterTimeout={600} transitionLeaveTimeout={600}>*/}\r\n            <div className=\"header fade slow\">\r\n                <div className=\"container\">\r\n                    <div className=\"clearfix\">\r\n                        <div>\r\n                            <h1 className=\"logo\">\r\n                                <Link to=\"/\">Здесь логотип приложения</Link>\r\n                            </h1>\r\n\r\n                            <ProfileBar />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        {/*</CSSTransitionGroup>*/}\r\n    </div>\r\n);\r\n\r\nexport default Header;\r\n","D:\\laravel\\www\\frontend_react\\src\\elements\\MaterialUI\\Tree\\TreeCustom.js",[],"D:\\laravel\\www\\frontend_react\\src\\pages\\TreePageM.jsx",["322","323","324","325"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport {MediumHourGlass} from '../elements/Loaders';\r\nimport debounce from 'lodash/debounce';\r\n\r\nimport { Button } from '@material-ui/core';\r\nimport TreeGrid  from '../elements/MaterialUI/Tree/TreeMultiSelection';\r\n\r\nclass GridPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    \r\n\r\n    componentDidMount() {\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"content content-924\">\r\n                <ContentTitle className=\"booking-title\">\r\n                    Tree Page Material UI\r\n                </ContentTitle>\r\n                <div style={{ height : '70vh'}}>\r\n                    <TreeGrid/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n    }),\r\n    dispatch => ({\r\n    })\r\n)(GridPage);\r\n","D:\\laravel\\www\\frontend_react\\src\\modals\\ButtonsBlock.js",[],"D:\\laravel\\www\\frontend_react\\src\\modals\\Warning.jsx",[],"D:\\laravel\\www\\frontend_react\\src\\modals\\ModalWrapper.js",[],"D:\\laravel\\www\\frontend_react\\src\\modals\\EmptyView.jsx",[],"D:\\laravel\\www\\frontend_react\\src\\pages\\TreePageCtrl.jsx",["326","327","328","329"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport {MediumHourGlass} from '../elements/Loaders';\r\nimport debounce from 'lodash/debounce';\r\n\r\nimport { Button } from '@material-ui/core';\r\nimport TreeGrid  from '../elements/MaterialUI/Tree/TreeControlled';\r\n\r\nclass GridPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    \r\n\r\n    componentDidMount() {\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"content content-924\">\r\n                <ContentTitle className=\"booking-title\">\r\n                    Tree Page Material UI Controlled\r\n                </ContentTitle>\r\n                <div style={{ height : '70vh'}}>\r\n                    <TreeGrid/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n    }),\r\n    dispatch => ({\r\n    })\r\n)(GridPage);\r\n","D:\\laravel\\www\\frontend_react\\src\\modals\\ModalOverlayHook.js",["330","331"],"import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ModalOverlay = (props) => {\r\n\r\n\r\n    const [query, setQuery] = useState(0);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keyup', onKeyUp);\r\n        return function cleanup() {\r\n          window.removeEventListener('keyup', onKeyUp);\r\n        }\r\n    }, [query]);\r\n\r\n\r\n    const  onKeyUp = (event) => {\r\n        if (event.keyCode === 27) props.close();\r\n    }\r\n\r\n    return <div className=\"modal-overlay\" onClick={props.close} />;\r\n}\r\n\r\nModalOverlay.propTypes = {\r\n    close: PropTypes.func\r\n};\r\n\r\nModalOverlay.defaultProp = {\r\n    close: () => {},\r\n};\r\nexport default ModalOverlay;\r\n","D:\\laravel\\www\\frontend_react\\src\\layout\\ContentTitle.jsx",[],"D:\\laravel\\www\\frontend_react\\src\\rabbiitMq.js",["332","333"],"D:\\laravel\\www\\frontend_react\\src\\pages\\WebSockerPage.jsx",["334","335","336","337","338","339","340","341","342","343","344","345","346","347"],"// Компонент в современном стиле с использованием Хуков Redux традиционно\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n//import { connect } from 'react-redux';\r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport { MediumHourGlass } from '../elements/Loaders';\r\nimport debounce from 'lodash/debounce';\r\n\r\nimport { Button } from '@material-ui/core';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { fetchClients } from '../redux/actions';\r\n// новый стиль работы с redux\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { getMe, setNewPassword } from '../api';\r\n\r\n// модальные окна\r\nimport { addModal, closeModal } from '../redux/actions';\r\n\r\n\r\n\r\nconst columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'name', headerName: 'Название', width: 350 },\r\n    { field: 'city.name', headerName: 'Город', width: 130 },\r\n];\r\n\r\nconst WebSocketPage =  (props) => {\r\n\r\n\r\n    const [status, setStatus] = useState('idle');\r\n    const [query, setQuery] = useState('1');\r\n// новое от redux\r\n    const websocket = useSelector(state => state.websocket);\r\n    const dispatch = useDispatch();\r\n/*\r\n    useEffect(() => {\r\n        if (!query) return;\r\n// новое от redux\r\n        dispatch(fetchClients({}));\r\n\r\n    }, [query]);\r\n\r\n    const reload = () => {\r\n       console.log('Reload data...');\r\n        dispatch(fetchClients({}));\r\n    }\r\n\r\n */\r\n    const showModal = () => {\r\n        console.log('Show modal function');\r\n        dispatch(addModal('emptyView', { activity: null }));\r\n    }\r\n    console.log('WebsocketPage websocket=', websocket);\r\n    const message = (websocket) ? websocket.message: '';\r\n    return (\r\n        <div className=\"content content-924\">\r\n            <ContentTitle className=\"booking-title\">\r\n                Web Socket Page\r\n            </ContentTitle>\r\n            <Button color=\"primary\" onClick={()=>{}}>Кнопка 1</Button>\r\n            <Button color=\"primary\" onClick={()=>{}}>Кнопка 2</Button>\r\n            <div style={{ height: '70vh' }}>\r\n                {message}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default WebSocketPage;\r\n\r\n",{"ruleId":"348","severity":1,"message":"349","line":29,"column":8,"nodeType":"350","messageId":"351","endLine":29,"endColumn":16},{"ruleId":"348","severity":1,"message":"352","line":32,"column":10,"nodeType":"350","messageId":"351","endLine":32,"endColumn":21},{"ruleId":"348","severity":1,"message":"353","line":32,"column":23,"nodeType":"350","messageId":"351","endLine":32,"endColumn":34},{"ruleId":"348","severity":1,"message":"354","line":43,"column":8,"nodeType":"350","messageId":"351","endLine":43,"endColumn":12},{"ruleId":"348","severity":1,"message":"355","line":44,"column":8,"nodeType":"350","messageId":"351","endLine":44,"endColumn":14},{"ruleId":"348","severity":1,"message":"356","line":45,"column":10,"nodeType":"350","messageId":"351","endLine":45,"endColumn":18},{"ruleId":"348","severity":1,"message":"357","line":46,"column":8,"nodeType":"350","messageId":"351","endLine":46,"endColumn":16},{"ruleId":"358","severity":1,"message":"359","line":99,"column":37,"nodeType":"360","messageId":"361","endLine":99,"endColumn":39},{"ruleId":"362","replacedBy":"363"},{"ruleId":"364","replacedBy":"365"},{"ruleId":"366","severity":1,"message":"367","line":21,"column":5,"nodeType":"368","messageId":"369","endLine":33,"endColumn":6},{"ruleId":"366","severity":1,"message":"367","line":46,"column":5,"nodeType":"368","messageId":"369","endLine":95,"endColumn":6},{"ruleId":"358","severity":1,"message":"370","line":68,"column":38,"nodeType":"360","messageId":"361","endLine":68,"endColumn":40},{"ruleId":"358","severity":1,"message":"370","line":69,"column":50,"nodeType":"360","messageId":"361","endLine":69,"endColumn":52},{"ruleId":"371","severity":1,"message":"372","line":74,"column":37,"nodeType":"373","messageId":"374","endLine":74,"endColumn":65},{"ruleId":"358","severity":1,"message":"359","line":74,"column":53,"nodeType":"360","messageId":"361","endLine":74,"endColumn":55},{"ruleId":"358","severity":1,"message":"359","line":87,"column":46,"nodeType":"360","messageId":"361","endLine":87,"endColumn":48},{"ruleId":"358","severity":1,"message":"370","line":90,"column":49,"nodeType":"360","messageId":"361","endLine":90,"endColumn":51},{"ruleId":"358","severity":1,"message":"359","line":100,"column":21,"nodeType":"360","messageId":"361","endLine":100,"endColumn":23},{"ruleId":"358","severity":1,"message":"359","line":107,"column":21,"nodeType":"360","messageId":"361","endLine":107,"endColumn":23},{"ruleId":"358","severity":1,"message":"359","line":117,"column":21,"nodeType":"360","messageId":"361","endLine":117,"endColumn":23},{"ruleId":"358","severity":1,"message":"359","line":124,"column":26,"nodeType":"360","messageId":"361","endLine":124,"endColumn":28},{"ruleId":"358","severity":1,"message":"359","line":138,"column":21,"nodeType":"360","messageId":"361","endLine":138,"endColumn":23},{"ruleId":"358","severity":1,"message":"359","line":145,"column":21,"nodeType":"360","messageId":"361","endLine":145,"endColumn":23},{"ruleId":"358","severity":1,"message":"359","line":155,"column":21,"nodeType":"360","messageId":"361","endLine":155,"endColumn":23},{"ruleId":"358","severity":1,"message":"359","line":157,"column":29,"nodeType":"360","messageId":"361","endLine":157,"endColumn":31},{"ruleId":"358","severity":1,"message":"359","line":162,"column":28,"nodeType":"360","messageId":"361","endLine":162,"endColumn":30},{"ruleId":"358","severity":1,"message":"370","line":163,"column":59,"nodeType":"360","messageId":"361","endLine":163,"endColumn":61},{"ruleId":"348","severity":1,"message":"375","line":3,"column":9,"nodeType":"350","messageId":"351","endLine":3,"endColumn":27},{"ruleId":"348","severity":1,"message":"376","line":4,"column":26,"nodeType":"350","messageId":"351","endLine":4,"endColumn":36},{"ruleId":"377","severity":1,"message":"378","line":6,"column":9,"nodeType":"379","messageId":"380","endLine":6,"endColumn":115},{"ruleId":"377","severity":1,"message":"378","line":14,"column":9,"nodeType":"379","messageId":"380","endLine":14,"endColumn":36},{"ruleId":"348","severity":1,"message":"381","line":4,"column":9,"nodeType":"350","messageId":"351","endLine":4,"endColumn":24},{"ruleId":"348","severity":1,"message":"382","line":5,"column":8,"nodeType":"350","messageId":"351","endLine":5,"endColumn":16},{"ruleId":"348","severity":1,"message":"383","line":7,"column":10,"nodeType":"350","messageId":"351","endLine":7,"endColumn":16},{"ruleId":"384","severity":1,"message":"385","line":11,"column":5,"nodeType":"386","messageId":"387","endLine":13,"endColumn":6},{"ruleId":"358","severity":1,"message":"359","line":26,"column":49,"nodeType":"360","messageId":"361","endLine":26,"endColumn":51},{"ruleId":"358","severity":1,"message":"370","line":30,"column":49,"nodeType":"360","messageId":"361","endLine":30,"endColumn":51},{"ruleId":"388","severity":1,"message":"389","line":18,"column":29,"nodeType":"390","endLine":18,"endColumn":104},{"ruleId":"358","severity":1,"message":"359","line":118,"column":41,"nodeType":"360","messageId":"361","endLine":118,"endColumn":43},{"ruleId":"358","severity":1,"message":"359","line":121,"column":48,"nodeType":"360","messageId":"361","endLine":121,"endColumn":50},{"ruleId":"358","severity":1,"message":"359","line":387,"column":47,"nodeType":"360","messageId":"361","endLine":387,"endColumn":49},{"ruleId":"348","severity":1,"message":"391","line":2,"column":8,"nodeType":"350","messageId":"351","endLine":2,"endColumn":12},{"ruleId":"348","severity":1,"message":"381","line":4,"column":9,"nodeType":"350","messageId":"351","endLine":4,"endColumn":24},{"ruleId":"348","severity":1,"message":"382","line":5,"column":8,"nodeType":"350","messageId":"351","endLine":5,"endColumn":16},{"ruleId":"348","severity":1,"message":"392","line":3,"column":10,"nodeType":"350","messageId":"351","endLine":3,"endColumn":21},{"ruleId":"348","severity":1,"message":"393","line":1,"column":8,"nodeType":"350","messageId":"351","endLine":1,"endColumn":16},{"ruleId":"358","severity":1,"message":"370","line":27,"column":28,"nodeType":"360","messageId":"361","endLine":27,"endColumn":30},{"ruleId":"388","severity":1,"message":"394","line":52,"column":45,"nodeType":"390","endLine":52,"endColumn":57},{"ruleId":"388","severity":1,"message":"394","line":57,"column":53,"nodeType":"390","endLine":57,"endColumn":65},{"ruleId":"388","severity":1,"message":"394","line":58,"column":53,"nodeType":"390","endLine":58,"endColumn":65},{"ruleId":"388","severity":1,"message":"394","line":59,"column":53,"nodeType":"390","endLine":59,"endColumn":65},{"ruleId":"388","severity":1,"message":"394","line":63,"column":45,"nodeType":"390","endLine":63,"endColumn":57},{"ruleId":"348","severity":1,"message":"393","line":1,"column":8,"nodeType":"350","messageId":"351","endLine":1,"endColumn":16},{"ruleId":"348","severity":1,"message":"395","line":3,"column":8,"nodeType":"350","messageId":"351","endLine":3,"endColumn":17},{"ruleId":"348","severity":1,"message":"396","line":7,"column":9,"nodeType":"350","messageId":"351","endLine":7,"endColumn":21},{"ruleId":"348","severity":1,"message":"397","line":7,"column":23,"nodeType":"350","messageId":"351","endLine":7,"endColumn":32},{"ruleId":"348","severity":1,"message":"398","line":9,"column":8,"nodeType":"350","messageId":"351","endLine":9,"endColumn":17},{"ruleId":"348","severity":1,"message":"399","line":11,"column":9,"nodeType":"350","messageId":"351","endLine":11,"endColumn":19},{"ruleId":"348","severity":1,"message":"382","line":13,"column":8,"nodeType":"350","messageId":"351","endLine":13,"endColumn":16},{"ruleId":"348","severity":1,"message":"400","line":14,"column":8,"nodeType":"350","messageId":"351","endLine":14,"endColumn":24},{"ruleId":"348","severity":1,"message":"401","line":20,"column":7,"nodeType":"350","messageId":"351","endLine":20,"endColumn":16},{"ruleId":"402","severity":1,"message":"403","line":29,"column":32,"nodeType":"404","messageId":"405","endLine":29,"endColumn":33,"suggestions":"406"},{"ruleId":"402","severity":1,"message":"403","line":29,"column":57,"nodeType":"404","messageId":"405","endLine":29,"endColumn":58,"suggestions":"407"},{"ruleId":"408","severity":1,"message":"409","line":146,"column":9,"nodeType":"410","endLine":146,"endColumn":19},{"ruleId":"388","severity":1,"message":"389","line":206,"column":33,"nodeType":"390","endLine":208,"endColumn":68},{"ruleId":"411","severity":1,"message":"412","line":256,"column":33,"nodeType":"390","endLine":256,"endColumn":58},{"ruleId":"348","severity":1,"message":"354","line":64,"column":8,"nodeType":"350","messageId":"351","endLine":64,"endColumn":12},{"ruleId":"348","severity":1,"message":"355","line":65,"column":8,"nodeType":"350","messageId":"351","endLine":65,"endColumn":14},{"ruleId":"348","severity":1,"message":"381","line":6,"column":10,"nodeType":"350","messageId":"351","endLine":6,"endColumn":25},{"ruleId":"348","severity":1,"message":"382","line":7,"column":8,"nodeType":"350","messageId":"351","endLine":7,"endColumn":16},{"ruleId":"348","severity":1,"message":"383","line":9,"column":10,"nodeType":"350","messageId":"351","endLine":9,"endColumn":16},{"ruleId":"348","severity":1,"message":"413","line":11,"column":22,"nodeType":"350","messageId":"351","endLine":11,"endColumn":34},{"ruleId":"348","severity":1,"message":"414","line":22,"column":14,"nodeType":"350","messageId":"351","endLine":22,"endColumn":25},{"ruleId":"348","severity":1,"message":"415","line":41,"column":12,"nodeType":"350","messageId":"351","endLine":41,"endColumn":18},{"ruleId":"348","severity":1,"message":"416","line":42,"column":19,"nodeType":"350","messageId":"351","endLine":42,"endColumn":27},{"ruleId":"348","severity":1,"message":"381","line":6,"column":10,"nodeType":"350","messageId":"351","endLine":6,"endColumn":25},{"ruleId":"348","severity":1,"message":"382","line":7,"column":8,"nodeType":"350","messageId":"351","endLine":7,"endColumn":16},{"ruleId":"348","severity":1,"message":"383","line":9,"column":10,"nodeType":"350","messageId":"351","endLine":9,"endColumn":16},{"ruleId":"348","severity":1,"message":"415","line":25,"column":12,"nodeType":"350","messageId":"351","endLine":25,"endColumn":18},{"ruleId":"348","severity":1,"message":"417","line":25,"column":20,"nodeType":"350","messageId":"351","endLine":25,"endColumn":29},{"ruleId":"348","severity":1,"message":"416","line":26,"column":19,"nodeType":"350","messageId":"351","endLine":26,"endColumn":27},{"ruleId":"418","severity":1,"message":"419","line":32,"column":8,"nodeType":"420","endLine":32,"endColumn":15,"suggestions":"421"},{"ruleId":"348","severity":1,"message":"381","line":6,"column":10,"nodeType":"350","messageId":"351","endLine":6,"endColumn":25},{"ruleId":"348","severity":1,"message":"382","line":7,"column":8,"nodeType":"350","messageId":"351","endLine":7,"endColumn":16},{"ruleId":"348","severity":1,"message":"422","line":18,"column":20,"nodeType":"350","messageId":"351","endLine":18,"endColumn":30},{"ruleId":"348","severity":1,"message":"415","line":31,"column":12,"nodeType":"350","messageId":"351","endLine":31,"endColumn":18},{"ruleId":"348","severity":1,"message":"417","line":31,"column":20,"nodeType":"350","messageId":"351","endLine":31,"endColumn":29},{"ruleId":"348","severity":1,"message":"416","line":32,"column":19,"nodeType":"350","messageId":"351","endLine":32,"endColumn":27},{"ruleId":"418","severity":1,"message":"423","line":42,"column":8,"nodeType":"420","endLine":42,"endColumn":15,"suggestions":"424"},{"ruleId":"348","severity":1,"message":"381","line":4,"column":9,"nodeType":"350","messageId":"351","endLine":4,"endColumn":24},{"ruleId":"348","severity":1,"message":"382","line":5,"column":8,"nodeType":"350","messageId":"351","endLine":5,"endColumn":16},{"ruleId":"348","severity":1,"message":"425","line":11,"column":7,"nodeType":"350","messageId":"351","endLine":11,"endColumn":14},{"ruleId":"348","severity":1,"message":"426","line":37,"column":7,"nodeType":"350","messageId":"351","endLine":37,"endColumn":11},{"ruleId":"348","severity":1,"message":"375","line":2,"column":9,"nodeType":"350","messageId":"351","endLine":2,"endColumn":27},{"ruleId":"348","severity":1,"message":"381","line":4,"column":9,"nodeType":"350","messageId":"351","endLine":4,"endColumn":24},{"ruleId":"348","severity":1,"message":"382","line":5,"column":8,"nodeType":"350","messageId":"351","endLine":5,"endColumn":16},{"ruleId":"348","severity":1,"message":"383","line":7,"column":10,"nodeType":"350","messageId":"351","endLine":7,"endColumn":16},{"ruleId":"384","severity":1,"message":"385","line":11,"column":5,"nodeType":"386","messageId":"387","endLine":13,"endColumn":6},{"ruleId":"348","severity":1,"message":"381","line":4,"column":9,"nodeType":"350","messageId":"351","endLine":4,"endColumn":24},{"ruleId":"348","severity":1,"message":"382","line":5,"column":8,"nodeType":"350","messageId":"351","endLine":5,"endColumn":16},{"ruleId":"348","severity":1,"message":"383","line":7,"column":10,"nodeType":"350","messageId":"351","endLine":7,"endColumn":16},{"ruleId":"384","severity":1,"message":"385","line":11,"column":5,"nodeType":"386","messageId":"387","endLine":13,"endColumn":6},{"ruleId":"348","severity":1,"message":"416","line":7,"column":19,"nodeType":"350","messageId":"351","endLine":7,"endColumn":27},{"ruleId":"418","severity":1,"message":"427","line":14,"column":8,"nodeType":"420","endLine":14,"endColumn":15,"suggestions":"428"},{"ruleId":"348","severity":1,"message":"429","line":2,"column":18,"nodeType":"350","messageId":"351","endLine":2,"endColumn":25},{"ruleId":"348","severity":1,"message":"430","line":35,"column":15,"nodeType":"350","messageId":"351","endLine":35,"endColumn":34},{"ruleId":"348","severity":1,"message":"431","line":2,"column":27,"nodeType":"350","messageId":"351","endLine":2,"endColumn":36},{"ruleId":"348","severity":1,"message":"381","line":6,"column":10,"nodeType":"350","messageId":"351","endLine":6,"endColumn":25},{"ruleId":"348","severity":1,"message":"382","line":7,"column":8,"nodeType":"350","messageId":"351","endLine":7,"endColumn":16},{"ruleId":"348","severity":1,"message":"432","line":10,"column":10,"nodeType":"350","messageId":"351","endLine":10,"endColumn":18},{"ruleId":"348","severity":1,"message":"433","line":11,"column":10,"nodeType":"350","messageId":"351","endLine":11,"endColumn":22},{"ruleId":"348","severity":1,"message":"434","line":15,"column":10,"nodeType":"350","messageId":"351","endLine":15,"endColumn":15},{"ruleId":"348","severity":1,"message":"435","line":15,"column":17,"nodeType":"350","messageId":"351","endLine":15,"endColumn":31},{"ruleId":"348","severity":1,"message":"422","line":18,"column":20,"nodeType":"350","messageId":"351","endLine":18,"endColumn":30},{"ruleId":"348","severity":1,"message":"425","line":22,"column":7,"nodeType":"350","messageId":"351","endLine":22,"endColumn":14},{"ruleId":"348","severity":1,"message":"415","line":31,"column":12,"nodeType":"350","messageId":"351","endLine":31,"endColumn":18},{"ruleId":"348","severity":1,"message":"417","line":31,"column":20,"nodeType":"350","messageId":"351","endLine":31,"endColumn":29},{"ruleId":"348","severity":1,"message":"436","line":32,"column":12,"nodeType":"350","messageId":"351","endLine":32,"endColumn":17},{"ruleId":"348","severity":1,"message":"416","line":32,"column":19,"nodeType":"350","messageId":"351","endLine":32,"endColumn":27},{"ruleId":"348","severity":1,"message":"437","line":50,"column":11,"nodeType":"350","messageId":"351","endLine":50,"endColumn":20},"no-unused-vars","'throttle' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'Echo' is defined but never used.","'Pusher' is defined but never used.","'setEvent' is defined but never used.","'rabbitMq' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["438"],"no-negated-in-lhs",["439"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Expected '!==' and instead saw '!='.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'newItemId'.","ArrowFunctionExpression","unsafeRefs","'CSSTransitionGroup' is defined but never used.","'withRouter' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'MediumHourGlass' is defined but never used.","'debounce' is defined but never used.","'Button' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'uuid' is defined but never used.","'updateModal' is defined but never used.","'ReactDOM' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'PropTypes' is defined but never used.","'getCountries' is defined but never used.","'getCities' is defined but never used.","'SexPicker' is defined but never used.","'DatePicker' is defined but never used.","'AutocompleteList' is defined but never used.","'DateInput' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["440","441"],["442","443"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'getTestHello' is defined but never used.","'loadClients' is defined but never used.","'status' is assigned a value but never used.","'setQuery' is assigned a value but never used.","'setStatus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["444"],"'closeModal' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["445"],"'columns' is assigned a value but never used.","'rows' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onKeyUp'. Either include it or remove the dependency array.",["446"],"'Message' is defined but never used.","'subscriptionPrivate' is assigned a value but never used.","'useEffect' is defined but never used.","'DataGrid' is defined but never used.","'fetchClients' is defined but never used.","'getMe' is defined but never used.","'setNewPassword' is defined but never used.","'query' is assigned a value but never used.","'showModal' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"447","fix":"448","desc":"449"},{"messageId":"450","fix":"451","desc":"452"},{"messageId":"447","fix":"453","desc":"449"},{"messageId":"450","fix":"454","desc":"452"},{"desc":"455","fix":"456"},{"desc":"457","fix":"458"},{"desc":"459","fix":"460"},"removeEscape",{"range":"461","text":"462"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"463","text":"464"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"465","text":"462"},{"range":"466","text":"464"},"Update the dependencies array to be: [props, query]",{"range":"467","text":"468"},"Update the dependencies array to be: [dispatch, query]",{"range":"469","text":"470"},"Update the dependencies array to be: [onKeyUp, query]",{"range":"471","text":"472"},[1174,1175],"",[1174,1174],"\\",[1199,1200],[1199,1199],[901,908],"[props, query]",[1258,1265],"[dispatch, query]",[364,371],"[onKeyUp, query]"]