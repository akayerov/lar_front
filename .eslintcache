[{"D:\\laravel\\www\\frontend_react\\src\\api.js":"1","D:\\laravel\\www\\frontend_react\\src\\pages\\EmptyComponent.jsx":"2","D:\\laravel\\www\\frontend_react\\src\\App.js":"3","D:\\laravel\\www\\frontend_react\\src\\pages\\Login.jsx":"4","D:\\laravel\\www\\frontend_react\\src\\redux\\actions\\index.js":"5","D:\\laravel\\www\\frontend_react\\src\\ModalManager.js":"6","D:\\laravel\\www\\frontend_react\\src\\modals\\ModalOverlay.js":"7","D:\\laravel\\www\\frontend_react\\src\\layout\\MainContent.jsx":"8","D:\\laravel\\www\\frontend_react\\src\\layout\\ProfileBar.jsx":"9","D:\\laravel\\www\\frontend_react\\src\\index.js":"10","D:\\laravel\\www\\frontend_react\\src\\layout\\NavigationBarMenu2.jsx":"11","D:\\laravel\\www\\frontend_react\\src\\redux\\reducers\\index.js":"12","D:\\laravel\\www\\frontend_react\\src\\localStorage.js":"13","D:\\laravel\\www\\frontend_react\\src\\elements\\AutocompleteList.jsx":"14","D:\\laravel\\www\\frontend_react\\src\\route\\routes.js":"15","D:\\laravel\\www\\frontend_react\\src\\layout\\TestAPI.jsx":"16","D:\\laravel\\www\\frontend_react\\src\\pages\\Reg\\Form.jsx":"17","D:\\laravel\\www\\frontend_react\\src\\icons\\Lock.jsx":"18","D:\\laravel\\www\\frontend_react\\src\\icons\\BlueMan.jsx":"19","D:\\laravel\\www\\frontend_react\\src\\layout\\Header.jsx":"20","D:\\laravel\\www\\frontend_react\\src\\elements\\Inputs.jsx":"21","D:\\laravel\\www\\frontend_react\\src\\pages\\ResetPassword.jsx":"22","D:\\laravel\\www\\frontend_react\\src\\elements\\SexPicker.jsx":"23","D:\\laravel\\www\\frontend_react\\src\\pages\\Profile.jsx":"24","D:\\laravel\\www\\frontend_react\\src\\elements\\DatePicker.jsx":"25","D:\\laravel\\www\\frontend_react\\src\\redux\\actionTypes.js":"26","D:\\laravel\\www\\frontend_react\\src\\layout\\ContentTitle.jsx":"27","D:\\laravel\\www\\frontend_react\\src\\elements\\MaterialUI\\DataGrid.js":"28","D:\\laravel\\www\\frontend_react\\src\\pages\\GridPage.jsx":"29","D:\\laravel\\www\\frontend_react\\src\\route\\AuthenticatedRoute2.jsx":"30","D:\\laravel\\www\\frontend_react\\src\\pages\\WithoutReg.jsx":"31","D:\\laravel\\www\\frontend_react\\src\\elements\\MaterialUI\\Tree\\TreeCustom.js":"32","D:\\laravel\\www\\frontend_react\\src\\route\\UnauthenticatedRoute.jsx":"33","D:\\laravel\\www\\frontend_react\\src\\icons\\Man.jsx":"34","D:\\laravel\\www\\frontend_react\\src\\pages\\TreePageM.jsx":"35","D:\\laravel\\www\\frontend_react\\src\\elements\\MaterialUI\\Tree\\TreeMultiSelection.js":"36","D:\\laravel\\www\\frontend_react\\src\\elements\\MaterialUI\\Tree\\TreeControlled.js":"37","D:\\laravel\\www\\frontend_react\\src\\pages\\TreePageCtrl.jsx":"38"},{"size":6524,"mtime":1608188347813,"results":"39","hashOfConfig":"40"},{"size":2396,"mtime":1608208478310,"results":"41","hashOfConfig":"40"},{"size":4751,"mtime":1608217026240,"results":"42","hashOfConfig":"40"},{"size":3110,"mtime":1608123183282,"results":"43","hashOfConfig":"40"},{"size":23067,"mtime":1608189597819,"results":"44","hashOfConfig":"40"},{"size":2182,"mtime":1608033171613,"results":"45","hashOfConfig":"40"},{"size":740,"mtime":1608025618201,"results":"46","hashOfConfig":"40"},{"size":235,"mtime":1608204267407,"results":"47","hashOfConfig":"40"},{"size":1347,"mtime":1608111153252,"results":"48","hashOfConfig":"40"},{"size":3030,"mtime":1608190206565,"results":"49","hashOfConfig":"40"},{"size":5658,"mtime":1608276374914,"results":"50","hashOfConfig":"40"},{"size":5665,"mtime":1608035795956,"results":"51","hashOfConfig":"40"},{"size":677,"mtime":1608189224346,"results":"52","hashOfConfig":"40"},{"size":1060,"mtime":1608035918824,"results":"53","hashOfConfig":"40"},{"size":830,"mtime":1608216617419,"results":"54","hashOfConfig":"40"},{"size":22683,"mtime":1608034473494,"results":"55","hashOfConfig":"40"},{"size":11058,"mtime":1608041729448,"results":"56","hashOfConfig":"40"},{"size":945,"mtime":1608036247590,"results":"57","hashOfConfig":"40"},{"size":749,"mtime":1608036247589,"results":"58","hashOfConfig":"40"},{"size":1042,"mtime":1608036197484,"results":"59","hashOfConfig":"40"},{"size":1055,"mtime":1608036007716,"results":"60","hashOfConfig":"40"},{"size":3240,"mtime":1608042616860,"results":"61","hashOfConfig":"40"},{"size":1250,"mtime":1608036028731,"results":"62","hashOfConfig":"40"},{"size":9900,"mtime":1608105365410,"results":"63","hashOfConfig":"40"},{"size":585,"mtime":1608035969180,"results":"64","hashOfConfig":"40"},{"size":1470,"mtime":1608035795930,"results":"65","hashOfConfig":"40"},{"size":749,"mtime":1608036066550,"results":"66","hashOfConfig":"40"},{"size":1482,"mtime":1608210501763,"results":"67","hashOfConfig":"40"},{"size":928,"mtime":1608210251076,"results":"68","hashOfConfig":"40"},{"size":679,"mtime":1608034255968,"results":"69","hashOfConfig":"40"},{"size":2518,"mtime":1608034901167,"results":"70","hashOfConfig":"40"},{"size":4611,"mtime":1608274079884,"results":"71","hashOfConfig":"40"},{"size":963,"mtime":1608041804659,"results":"72","hashOfConfig":"40"},{"size":689,"mtime":1608036247592,"results":"73","hashOfConfig":"40"},{"size":932,"mtime":1608216784444,"results":"74","hashOfConfig":"40"},{"size":1249,"mtime":1608216516005,"results":"75","hashOfConfig":"40"},{"size":1662,"mtime":1608295867986,"results":"76","hashOfConfig":"40"},{"size":947,"mtime":1608276492251,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1gjjqh9",{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"122"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"114"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"80"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\laravel\\www\\frontend_react\\src\\api.js",[],["171","172"],"D:\\laravel\\www\\frontend_react\\src\\pages\\EmptyComponent.jsx",["173","174","175"],"D:\\laravel\\www\\frontend_react\\src\\App.js",[],"D:\\laravel\\www\\frontend_react\\src\\pages\\Login.jsx",[],"D:\\laravel\\www\\frontend_react\\src\\redux\\actions\\index.js",["176"],"D:\\laravel\\www\\frontend_react\\src\\ModalManager.js",[],["177","178"],"D:\\laravel\\www\\frontend_react\\src\\modals\\ModalOverlay.js",[],"D:\\laravel\\www\\frontend_react\\src\\layout\\MainContent.jsx",[],"D:\\laravel\\www\\frontend_react\\src\\layout\\ProfileBar.jsx",["179"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {logOut} from '../redux/actions';\r\n// новый правиьно работающий на сервере logout\r\nimport { logout1 } from '../redux/actions';\r\n\r\nconst ProfileBar = props => (\r\n    <ul className=\"login-menu\">\r\n        {\r\n            props.user ?\r\n                (\r\n                    [\r\n                        <li className=\"profile\" key=\"1\">\r\n                            <Link to=\"/me\">{props.user.name} {props.user.surname}</Link>\r\n                        </li>,\r\n                        <li key=\"2\">\r\n                            <a onClick={()=>props.makeLogout(props.token)} style={{cursor: 'pointer'}}>Выход</a>\r\n                        </li>\r\n                    ]\r\n                )\r\n                : <li className=\"login\" data-id=\"2\"><Link to=\"/auth\">Вход</Link></li>\r\n        }\r\n\r\n        {\r\n            !props.user &&\r\n            <li className=\"reg\" data-id=\"3\"><Link to=\"/reg\">Регистрация</Link></li>\r\n        }\r\n    </ul>\r\n);\r\n\r\nexport default connect(\r\n    state => ({\r\n       token: state.token,\r\n       user: state.user,\r\n    }),\r\n    dispatch => ({\r\n        logOut: () => dispatch(logOut()),\r\n        makeLogout: (token) => dispatch(logout1(token)),\r\n\r\n    })\r\n)(ProfileBar);\r\n",["180","181"],"D:\\laravel\\www\\frontend_react\\src\\index.js",["182","183"],"/* Этоот код генерится create-react-app  при создании приложения\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n*/\n\nimport './css/toastr.css';\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport throttle from 'lodash/throttle';\nimport thunk from 'redux-thunk';\nimport AppReducer from './redux/reducers';\n\nimport { loadState, clearState } from './localStorage';\nimport App from './App';\nimport ModalManager from './ModalManager';\n\nimport toastr from 'toastr';\nimport axios from 'axios';\n\ntoastr.options = {\n  \"closeButton\": false,\n  \"debug\": true,\n  \"newestOnTop\": false,\n  \"progressBar\": true,\n  \"positionClass\": \"toast-top-right\",\n  \"preventDuplicates\": false,\n  \"onclick\": null,\n  \"showDuration\": \"300\",\n  \"hideDuration\": \"300\",\n  \"timeOut\": \"3000\",\n  \"extendedTimeOut\": \"1000\",\n  \"showEasing\": \"swing\",\n  \"hideEasing\": \"linear\",\n  \"showMethod\": \"fadeIn\",\n  \"hideMethod\": \"fadeOut\"\n}\n window.toast = toastr;\n \nexport let store = createStore(AppReducer, loadState(), composeWithDevTools(applyMiddleware(thunk)));\n\n\nconsole.log('store=', store);\nconsole.log('token=', store.getState());\n\n/**  axios прерыватель interceptors запрос */ \naxios.interceptors.request.use(\n  config => {\n    if(store.getState().token)\n      config.headers.Authorization = 'Bearer ' + store.getState().token;\n    return config;\n  },\n  error => Promise.reject(error)\n);\n\n/**  axios прерыватель interceptors ответ */ \naxios.interceptors.response.use(response => {\n//  console.log('!!!SUCCESS!!! response interseptor');\n  return response;\n}, error => {\n//  console.log('ERROR response interseptor');\n  if (error.response.status === 401) {\n      console.log('response =', error.response);\n      if( error.response.config.url == '/api/auth/logout')  {\n         console.log('clear state');\n         clearState();\n        setTimeout(() => {\n            window.location.pathname = '/auth';\n          }, 1000);\n      }\n      else {   \n        window.toast.error('Ошибка авторизации');\n        setTimeout(() => {\n            window.location.pathname = '/auth';\n          }, 1000);\n      }  \n  }\n  return Promise.reject(error)\n})\n\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\nrender(\n  <Provider store={store}>\n    <ModalManager />\n  </Provider>,\n  document.getElementById('modals_root')\n);\n","D:\\laravel\\www\\frontend_react\\src\\layout\\NavigationBarMenu2.jsx",["184","185","186","187","188","189","190","191","192","193"],"D:\\laravel\\www\\frontend_react\\src\\redux\\reducers\\index.js",["194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211"],"import {combineReducers} from 'redux';\r\nimport * as actionTypes from '../actionTypes';\r\nimport uniqueId from 'lodash/uniqueId';\r\n\r\nconst pending = (status = {}, action) => {\r\n    if (action.type === actionTypes.PENDING_SET) {\r\n        return {\r\n            ...status,\r\n            [action.key]: !!action.value,\r\n        };\r\n    }\r\n    return status;\r\n};\r\n\r\nconst token = (token = null, action) => {\r\n    if (action.type === actionTypes.TOKEN_SET) return action.token;\r\n    return token;\r\n};\r\n\r\nconst user = (data = null, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.USER_SET:\r\n            action.data.sex = !!action.data.sex;\r\n            return action.user;\r\n        case actionTypes.USER_UPDATE:\r\n            action.data.sex = !!action.data.sex;\r\n            return {\r\n                ...data,\r\n                ...action.data\r\n            };\r\n        case actionTypes.USER_LOGOUT:\r\n            return null;\r\n    }\r\n    return data;\r\n};\r\n\r\nconst activities = (list = [], {data, type}) => {\r\n    if (type === actionTypes.ACTIVITY_UPDATE) {\r\n        return data;\r\n    }\r\n    return list;\r\n};\r\n\r\nconst basketItems = (items = [], action) => {\r\n//    console.log('basketItems action=', action, items);\r\n    switch (action.type) {\r\n        case actionTypes.setBasketItems: \r\n            return action.items;\r\n/*\r\n            let newItems = [];\r\n            for (let i = 0; i < action.items.length; i++)\r\n                newItems.push(action.items[i])\r\n            return newItems;\r\n*/\r\n        case actionTypes.clearBasketPromo:\r\n                let newItems = [];\r\n                for (let i = 0; i < items; i++) {\r\n                    let itemNew = items[i];\r\n                    delete itemNew.promo;\r\n                    newItems.push(itemNew);\r\n                }    \r\n                return newItems;\r\n        case actionTypes.addBasketItem:\r\n            const activity = action.activity;\r\n            const activity_tariff_id = action.activity_tariff_id;\r\n            let newItem = null;\r\n            const restItems = items.reduce((arr, item) => {\r\n                if (item.activity.id != activity.id) return [...arr, item];\r\n                else if (item.activity_tariff_id != activity_tariff_id) return [...arr, item];\r\n                newItem = {...item, count: item.count + 1};\r\n                return arr;\r\n            }, []);\r\n            let newItemId = parseInt(uniqueId(), 10);\r\n            while (!!restItems.find(item => item.id == newItemId)) newItemId = parseInt(uniqueId(), 10);\r\n            if (!newItem) {\r\n                newItem = {\r\n                    id: newItemId,\r\n                    activity,\r\n                    activity_tariff_id,\r\n                    is_tandem: false,\r\n                    count: 1\r\n                }\r\n            }\r\n            return [...restItems, newItem];\r\n\r\n        case actionTypes.updateBasketItem:\r\n            return items.map(item => item.id == action.id ? {...item, count: Math.max(action.count, 1)} : {...item});\r\n\r\n        case actionTypes.removeBasketItem:\r\n            return items.filter(item => item.id != action.id);\r\n\r\n        case actionTypes.changeBasketItemsTariffs:\r\n            // Changed values can be accessed by `action.payload`\r\n            return items;\r\n    }\r\n    return items;\r\n};\r\n\r\nconst tickets = (tickets = [], action) => {\r\n    if (action.type == actionTypes.setTickets) {\r\n        return action.data;\r\n    }\r\n    return tickets;\r\n};\r\n\r\nconst modal = (state = {}, action) => {\r\n    if (action.type == actionTypes.updateModal) {\r\n        return {\r\n            type: action.modalType,\r\n            data: action.data,\r\n        }\r\n    }\r\n    return state;\r\n};\r\n\r\nconst modals = (state = {}, action) => {\r\n    if (action.type == actionTypes.addModal) {\r\n        console.log(state, action);\r\n\r\n        if(state && state.length > 0) {\r\n            return [...state, action]\r\n        }\r\n        else\r\n            return [action]\r\n    }\r\n    else if (action.type == actionTypes.closeModal) {\r\n        console.log('Close Modal');\r\n        if (state && state.length > 0) {\r\n            let res = [];\r\n            for(let i=0; i<state.length-1;i++) {\r\n                res.push(state[i]);\r\n            }\r\n            return res;\r\n        }\r\n    }\r\n    return state;\r\n};\r\n\r\nconst printingTemplate = (template = null, action) => {\r\n    if (action.type == actionTypes.setPrintingTemplate) {\r\n        return action.template;\r\n    }\r\n    return template;\r\n};\r\n\r\nconst reservedDates = (dates = {}, action) => {\r\n    if (action.type == actionTypes.setReservedDate) {\r\n        return {\r\n            ...dates,\r\n            [action.activityId]: action.dates\r\n        };\r\n    }\r\n    return dates;\r\n};\r\n\r\nconst reservationTimers = (timers = [], action) => {\r\n    if (action.type == actionTypes.setReservationTimers) {\r\n        return action.timers;\r\n    }  else if (action.type == actionTypes.addReservationTimer) {\r\n        return [...timers, {\r\n            reservationId: action.reservationId,\r\n            expirationTime: action.expirationTime,\r\n        }];\r\n    } else if (action.type == actionTypes.removeReservationTimer) {\r\n        return timers.filter(timer => timer.reservationId != action.reservationId);\r\n    }\r\n\r\n    return timers;\r\n};\r\n\r\n\r\nconst clients = (list = [], { data, type }) => {\r\n    if (type === actionTypes.CLIENT_UPDATE) {\r\n        return data;\r\n    }\r\n    return list;\r\n};\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    pending,\r\n    token,\r\n    user,\r\n    activities,\r\n    basketItems,\r\n    tickets,\r\n    modal,\r\n    printingTemplate,\r\n    reservedDates,\r\n    reservationTimers,\r\n    modals,\r\n//\r\n   clients    \r\n\r\n});\r\n\r\nexport default rootReducer;\r\n",["212","213"],"D:\\laravel\\www\\frontend_react\\src\\localStorage.js",[],["214","215"],"D:\\laravel\\www\\frontend_react\\src\\elements\\AutocompleteList.jsx",[],["216","217"],"D:\\laravel\\www\\frontend_react\\src\\route\\routes.js",[],"D:\\laravel\\www\\frontend_react\\src\\layout\\TestAPI.jsx",[],"D:\\laravel\\www\\frontend_react\\src\\pages\\Reg\\Form.jsx",["218","219","220","221","222","223","224","225","226","227","228"],"import ReactDOM from 'react-dom'\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport InputMask from 'react-input-mask';\r\n\r\nimport {getCountries, getCities} from '../../api';\r\nimport {regUser} from '../../redux/actions';\r\nimport SexPicker from '../../elements/SexPicker';\r\nimport {GrayInput} from '../../elements/Inputs';\r\nimport {DatePicker} from '../../elements/DatePicker';\r\nimport moment from 'moment';\r\nimport debounce from 'lodash/debounce';\r\nimport AutocompleteList from '../../elements/AutocompleteList.jsx';\r\nimport ContentTitle from '../../layout/ContentTitle';\r\n\r\nconst PhoneInput = props => <InputMask {...props} mask=\"+9 (999) 999 99 99\" maskChar=\"*\" />;\r\nconst DateMaskedInput = props => <InputMask {...props} mask=\"99.99.9999\" maskChar=\" \" />;\r\n\r\nclass DateInput extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <GrayInput type=\"text\" placeholder=\"Дата рождения\" value={this.props.value} onClick={this.props.onClick}\r\n                       onChange={this.props.onChange} inputComponent={DateMaskedInput} required />\r\n        );\r\n    }\r\n}\r\n\r\nconst emailPattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\nconst validators = {\r\n    password: {\r\n        isValid: p => p && p.length >= 5,\r\n        error: 'Пароль должен содержать не менее 5 символов',\r\n    },\r\n    name: {\r\n        isValid: p => p && p.length > 0,\r\n        error: 'Не указано Имя',\r\n    },\r\n    surname: {\r\n        isValid: p => p && p.length > 0,\r\n        error: 'Не указана Фамилия',\r\n    },\r\n    birth_date: {\r\n        isValid: d => moment.isMoment(d) && d.isValid() && d.isBefore(moment()),\r\n        error: 'Некорректная дата рождения',\r\n    },\r\n    phone: {\r\n        isValid: p => p && p.length > 0,\r\n        error: 'Не указан Телефон',\r\n    },\r\n    emailPattern: {\r\n        isValid: e => emailPattern.test(e),\r\n        error: 'Некорректный e-mail',\r\n    },\r\n};\r\n\r\nclass Form extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            status: null,\r\n            sex: null,\r\n            email: '',\r\n            password: '',\r\n            repeatPassword: '',\r\n            name: '',\r\n            surname: '',\r\n            middle_name: '',\r\n            country: '',\r\n            city: '',\r\n            birth_date: null,\r\n            phone: '',\r\n            is_admin: false,\r\n\r\n            hasMiddleName: true,\r\n            showPasswords: false,\r\n        };\r\n\r\n        this.initialBirthDate = moment().year(1991);\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.isValid = this.isValid.bind(this);\r\n        this.handleChangeName = this.handleChangeName.bind(this);\r\n        this.toggleHasMiddleName = this.toggleHasMiddleName.bind(this);\r\n        this.toggleRoles = this.toggleRoles.bind(this);\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n        this.setWrapperRef = this.setWrapperRef.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n        this.setState({ status: this.props.status });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    setWrapperRef(node, wrapper) {\r\n        switch (wrapper) {\r\n            case 'country':\r\n                this.wrapperCountryRef = node;\r\n                break;\r\n            case 'city':\r\n            default:\r\n                this.wrapperCityRef = node;\r\n                break;\r\n        }\r\n    }\r\n\r\n    isValid() {\r\n        let hasError = false;\r\n        if (this.state.password !== this.state.repeatPassword) {\r\n            window.toast.error('Пароли не совпадают');\r\n            hasError = true;\r\n        }\r\n\r\n        for (let name in this.state) {\r\n            if (!validators[name]) continue;\r\n            if (validators[name].isValid(this.state[name])) continue;\r\n\r\n            if (validators[name].error) window.toast.error(validators[name].error);\r\n            hasError = true;\r\n        }\r\n\r\n        return !hasError;\r\n    }\r\n\r\n    onSubmit(event) {\r\n        event.preventDefault();\r\n        if (!this.isValid()) return;\r\n/*\r\n        if (!this.state.countries.find(country => country.title === this.state.country)) {\r\n            window.toast.error('Пожалуйста, укажите страну из списка');\r\n            return;\r\n        }\r\n        if (!this.state.cities.find(city => city.title === this.state.city)) {\r\n            window.toast.error('Пожалуйста, укажите город из списка');\r\n            return;\r\n        }\r\n*/\r\n        this.props.submit(this.state);\r\n        if (this.props.history) this.props.history.goBack();\r\n    }\r\n\r\n    handleChangeName(event) {\r\n        let value = event.target.value.toString().replace(/^\\s*/g, '');\r\n        if (value.length) value = value[0].toLocaleUpperCase() + value.slice(1);\r\n        const name = event.target.name;\r\n\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n    handleClickOutside(e) {\r\n        const hasOwnHandler = e.className === 'autocomplete-item' || e.className === 'autocomplete';\r\n        if (hasOwnHandler) return;\r\n\r\n    }\r\n\r\n    toggleHasMiddleName() {\r\n        this.setState(prevState => ({\r\n            hasMiddleName: !prevState.hasMiddleName,\r\n            middle_name: !prevState.hasMiddleName ? prevState.middle_name : '',\r\n        }));\r\n    }\r\n\r\n    toggleRoles() {\r\n        this.setState(prevState => ({\r\n            is_admin: !prevState.is_admin,\r\n        }));\r\n    }\r\n\r\n\r\n\r\n    toggleShowPasswords() {\r\n        this.setState(prevState => ({\r\n            showPasswords: !prevState.showPasswords,\r\n        }));\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const pending = this.props.pending;\r\n        const {hasMiddleName, showPasswords, is_admin } = this.state;\r\n\r\n        return (\r\n            <div className=\"content content-100\">\r\n                <ContentTitle className=\"reg-title\">Регистрация</ContentTitle>\r\n\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"white-content reg-form-step-2\">\r\n                        <div className=\"form login-form\">\r\n                            <GrayInput type=\"email\" placeholder=\"E-mail\" required\r\n                                    value={this.state.email} onChange={e => this.setState({email: e.target.value})} />\r\n\r\n                            <GrayInput type={showPasswords ? 'text' : 'password'} placeholder=\"Пароль\" required\r\n                                    value={this.state.password}\r\n                                    onChange={e => this.setState({password: e.target.value})}>\r\n                                <a className={`show-password-link ${showPasswords ? 'disabled' : ''}`}\r\n                                style={{left: 263, top: -4}}\r\n                                onClick={this.toggleShowPasswords}>\r\n                                    Показать\r\n                                </a>\r\n                            </GrayInput>\r\n                            <GrayInput type={showPasswords ? 'text' : 'password'} placeholder=\"Повторить пароль\" required\r\n                                    value={this.state.repeatPassword}\r\n                                    onChange={e => this.setState({repeatPassword: e.target.value})} />\r\n\r\n                            <GrayInput type=\"text\" placeholder=\"Фамилия\" required value={this.state.surname}\r\n                                    onChange={this.handleChangeName} name=\"surname\" />\r\n                            <GrayInput type=\"text\" placeholder=\"Имя\" required value={this.state.name}\r\n                                    onChange={this.handleChangeName} name=\"name\" />\r\n                            <GrayInput type=\"text\" placeholder=\"Отчество\" value={this.state.middle_name}\r\n                                    onChange={this.handleChangeName} name=\"middle_name\" disabled={!hasMiddleName}\r\n                                    required={hasMiddleName} />\r\n                            <div className=\"radio\" onClick={this.toggleHasMiddleName}\r\n                                style={{padding: 0, marginBottom: 32, marginTop: -10}}>\r\n                                <input type=\"checkbox\" onChange={this.toggleHasMiddleName} checked={!hasMiddleName} />\r\n                                <label style={{fontSize: '1.5rem'}}>Нет отчества</label>\r\n                            </div>\r\n\r\n                            <div className=\"rowmy-date-fix\">\r\n                                <DatePicker customInput={<DateInput />} selected={this.state.birth_date}\r\n                                            onChange={date => this.setState({birth_date: date})} showYearDropdown\r\n                                            showMonthDropdown dropdownMode=\"select\" maxDate={moment()} />\r\n                            </div>\r\n\r\n                            <GrayInput type=\"text\" placeholder=\"Телефон\" inputComponent={PhoneInput} required\r\n                                    value={this.state.phone}\r\n                                    onChange={e => this.setState({phone: e.target.value.replace(/\\D*/g, '')})} />\r\n\r\n                            <div className=\"radio\" onClick={this.toggleRoles}\r\n                                style={{ padding: 0, marginBottom: 32, marginTop: -10 }}>\r\n                                <input type=\"checkbox\" onChange={this.toggleRoles} checked={is_admin} />\r\n                                <label style={{ fontSize: '1.5rem' }}>Администратор</label>\r\n                            </div>\r\n\r\n                            <div className=\"rem\">\r\n                                <img src=\"img/req.svg\" />&nbsp;&nbsp;&nbsp; Поля обязательные для заполнения\r\n                            </div>\r\n\r\n                            <div className=\"row-button\">\r\n                                <span className=\"yellow button\" onClick={this.props.onCancel}\r\n                                    style={{margin: '0 2px'}}>Отмена</span>\r\n                                <input type=\"submit\" defaultValue=\"Регистрация\" disabled={pending} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>    \r\n        );\r\n    }\r\n\r\n}\r\n\r\nForm.propTypes = {\r\n//    onCancel: PropTypes.func.isRequired,\r\n//    status: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default connect(\r\n    state => ({\r\n        pending: state.pending.user,\r\n    }),\r\n    dispatch => ({\r\n        submit: data => {\r\n            dispatch(regUser({\r\n                ...data,\r\n                birth_date: data.birth_date.format('YYYY-MM-DD'),\r\n            }));\r\n        },\r\n    }),\r\n)(Form);\r\n",["229","230"],"D:\\laravel\\www\\frontend_react\\src\\icons\\Lock.jsx",[],"D:\\laravel\\www\\frontend_react\\src\\icons\\BlueMan.jsx",[],"D:\\laravel\\www\\frontend_react\\src\\layout\\Header.jsx",["231"],"import React from 'react';\r\nimport {CSSTransitionGroup} from 'react-transition-group';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport ProfileBar from './ProfileBar';\r\n\r\nconst Header = props => (\r\n    <div className=\"header-wrapper\">\r\n        {/*<CSSTransitionGroup transitionName=\"fade\" transitionAppear={true} transitionAppearTimeout={600}*/}\r\n                            {/*transitionEnterTimeout={600} transitionLeaveTimeout={600}>*/}\r\n            <div className=\"header fade slow\">\r\n                <div className=\"container\">\r\n                    <div className=\"clearfix\">\r\n                        <div>\r\n                            <h1 className=\"logo\">\r\n                                <Link to=\"/\">SkyPark - парк приключений на высоте</Link>\r\n                            </h1>\r\n\r\n                            <ProfileBar />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        {/*</CSSTransitionGroup>*/}\r\n    </div>\r\n);\r\n\r\nexport default Header;\r\n","D:\\laravel\\www\\frontend_react\\src\\elements\\Inputs.jsx",["232"],"import React from 'react';\r\nimport uuid from 'uuid';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const Input = ({label, placeholder, children, inputComponent: InputComponent = 'input', ...props}) => {\r\n//    const id = uuid.v4();\r\n    const id = uuidv4(); \r\n    const labelText = label || placeholder || '';\r\n    const labelClass = props.value !== undefined && props.value.length > 0 ? 'used floating' : 'floating';\r\n    return (\r\n        <div className=\"rowmy\">\r\n            <InputComponent {...props} id={id} />\r\n            {labelText && <label className={labelClass} htmlFor={id}>{labelText}</label>}\r\n            {props.required && <div className=\"req\" />}\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const YellowInput = props => <Input {...props} className={'yellow-input ' + props.className} />;\r\nexport const GrayInput = props => <Input {...props} className={'gray-input ' + props.className} />;\r\nexport const WhiteInput = props => <Input {...props} className={'white-input ' + props.className} />;\r\n\r\nexport default Input;\r\n","D:\\laravel\\www\\frontend_react\\src\\pages\\ResetPassword.jsx",[],"D:\\laravel\\www\\frontend_react\\src\\elements\\SexPicker.jsx",["233","234"],"D:\\laravel\\www\\frontend_react\\src\\pages\\Profile.jsx",["235","236"],"import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {updateUser} from '../redux/actions';\r\n\r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport SexPicker from '../elements/SexPicker';\r\nimport {WhiteInput} from '../elements/Inputs';\r\nimport moment from \"moment\";\r\nimport {DatePicker} from \"../elements/DatePicker\";\r\n\r\nclass DateInput extends React.PureComponent {\r\n    render() {\r\n        return <WhiteInput type=\"text\" placeholder=\"01.01.1970\" label=\"Дата рождения\" name=\"birth_date\"\r\n                           value={this.props.value}\r\n                           onClick={this.props.onClick} onChange={this.props.onChange} />\r\n    }\r\n}\r\n\r\nclass Profile extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: props.user,\r\n            old_password: '',\r\n            new_password: '',\r\n            new_password_confirm: '',\r\n            changePasswordPending: false,\r\n        };\r\n\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.canChangePassword = this.canChangePassword.bind(this);\r\n        this.changePassword = this.changePassword.bind(this);\r\n        this.onSexChange = this.onSexChange.bind(this);\r\n        this.onPhoneChange = this.onPhoneChange.bind(this);\r\n        this.isValid = this.isValid.bind(this);\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        if (!nextProps.pending) this.setState({user: nextProps.user});\r\n    }\r\n\r\n    isValid() {\r\n        const user = this.state.user;\r\n        return (\r\n            user.name && user.name.length > 0 &&\r\n            user.surname && user.surname.length > 0 &&\r\n            user.phone && user.phone.length > 5 && user.phone.length < 12 &&\r\n            user.country && user.country.length > 0 &&\r\n            moment.isMoment(user.birth_date) && user.birth_date.isValid()\r\n        );\r\n    }\r\n\r\n    onInputChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                [name]: value,\r\n            }\r\n        }))\r\n    }\r\n\r\n    onSexChange(sex) {\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                sex,\r\n            }\r\n        }))\r\n    }\r\n\r\n    onPhoneChange(event) {\r\n        const value = event.target.value;\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                phone: value.replace(/\\D*/g, ''),\r\n            }\r\n        }))\r\n    }\r\n\r\n    canChangePassword() {\r\n        return (\r\n            !this.state.changePasswordPending &&\r\n            this.state.old_password.length > 5 && this.state.new_password.length > 5 &&\r\n            this.state.new_password === this.state.new_password_confirm\r\n        );\r\n    }\r\n\r\n    changePassword(event) {\r\n        event.preventDefault();\r\n        if (!this.canChangePassword) return;\r\n\r\n        this.setState({changePasswordPending: true});\r\n\r\n        fetch(`/api/client/password`, {\r\n            method: 'POST',\r\n            'credentials': 'include',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                old_password: this.state.old_password,\r\n                new_password: this.state.new_password,\r\n            })\r\n        })\r\n            .then(r => r.json())\r\n            .then(data => {\r\n                this.setState({changePasswordPending: false});\r\n\r\n                if (!data.error) {\r\n                    this.setState({old_password: '', new_password: '', new_password_confirm: ''});\r\n                    window.toast.success('Пароль изменён');\r\n                } else {\r\n                    if (data.error.code == 1) {\r\n                        this.setState({old_password: ''});\r\n                        window.toast.error('Неверный старый пароль');\r\n                    } else if (data.error.code == 2) {\r\n                        this.setState({new_password: '', new_password_confirm: ''});\r\n                        window.toast.error('Новый пароль некорректен');\r\n                    } else {\r\n                        throw new Error();\r\n                    }\r\n                }\r\n            })\r\n            .catch(() => {\r\n                this.setState({changePasswordPending: false});\r\n                window.toast.error('Произошла ошибка, повторите позднее');\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const user = this.state.user;\r\n        const pending = this.props.pending;\r\n        const onSubmit = pending || !this.isValid()\r\n            ? () => {\r\n            }\r\n            : event => {\r\n                event.preventDefault();\r\n                this.props.onSubmit(this.state.user)\r\n            };\r\n\r\n        if (!this.props.token || !this.props.user) return <Redirect to=\"/auth\" />;\r\n\r\n        return (\r\n            <div className=\"content content-924\">\r\n                <ContentTitle>{this.props.user.name} {this.props.user.surname}</ContentTitle>\r\n\r\n                <form onSubmit={onSubmit}>\r\n                    <SexPicker name=\"sex\" value={user.sex} onChange={this.onSexChange} />\r\n                    <div className=\"white-content reg-form-step-2\" style={{paddingBottom: '20px'}}>\r\n                        <div className=\"form login-form white-input-form\">\r\n                            <WhiteInput type=\"email\" value={user.email || ''} label=\"E-mail\" name=\"email\" disabled />\r\n\r\n                            <WhiteInput type=\"text\" value={user.surname || ''} label=\"Фамилия\" name=\"surname\"\r\n                                        onChange={this.onInputChange} />\r\n                            <WhiteInput type=\"text\" value={user.name || ''} label=\"Имя\" name=\"name\"\r\n                                        onChange={this.onInputChange} />\r\n                            <WhiteInput type=\"text\" value={user.middle_name || ''} label=\"Отчество\" name=\"middle_name\"\r\n                                        onChange={this.onInputChange} />\r\n\r\n                            <DatePicker customInput={<DateInput />} selected={user.birth_date}\r\n                                        onChange={date => this.setState(prevState => ({\r\n                                            user: {\r\n                                                ...prevState.user,\r\n                                                birth_date: date\r\n                                            }\r\n                                        }))} showYearDropdown showMonthDropdown dropdownMode=\"select\" />\r\n\r\n                            <WhiteInput type=\"text\" value={user.phone || ''} label=\"Телефон\" name=\"phone\"\r\n                                        placeholder=\"79609966699\"\r\n                                        onChange={this.onPhoneChange} />\r\n\r\n                            <WhiteInput type=\"text\" label=\"Страна\" name=\"country\"\r\n                                        value={user.country || ''} onChange={this.onInputChange} />\r\n\r\n                            <WhiteInput type=\"text\" label=\"Город\" name=\"city\"\r\n                                        value={user.city || ''} onChange={this.onInputChange} />\r\n\r\n                            <div className=\"rem\">&nbsp;</div>\r\n                            <div className=\"row-button\">\r\n                                <input type=\"submit\" value=\"Обновить\" disabled={pending || !this.isValid()} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                <form method=\"post\" onSubmit={this.changePassword}>\r\n                    <div className=\"white-content reg-form-step-2\">\r\n                        <div className=\"form login-form white-input-form\">\r\n                            <WhiteInput type=\"password\" label=\"Старый пароль\"\r\n                                        value={this.state.old_password || ''} onChange={e => this.setState({old_password: e.target.value})} />\r\n                            <WhiteInput type=\"password\" label=\"Новый пароль\"\r\n                                        value={this.state.new_password || ''} onChange={e => this.setState({new_password: e.target.value})} />\r\n                            <WhiteInput type=\"password\" label=\"Подтвердите новый пароль\"\r\n                                        value={this.state.new_password_confirm || ''} onChange={e => this.setState({new_password_confirm: e.target.value})} />\r\n\r\n                            <div className=\"rem\">&nbsp;</div>\r\n                            <div className=\"row-button\">\r\n                                <input type=\"submit\" value=\"Изменить пароль\" disabled={!this.canChangePassword()} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfile.defaultProps = {\r\n    user: {\r\n        sex: true,\r\n        email: '',\r\n        name: '',\r\n        surname: '',\r\n        middle_name: '',\r\n        country: '',\r\n        city: '',\r\n        height: null,\r\n        weight: null,\r\n        birth_date: moment(),\r\n        phone: '',\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    state => ({\r\n        token: state.token,\r\n        user: state.user ? {...state.user, birth_date: moment(state.user.birth_date)} : Profile.defaultProps.user,\r\n        pending: state.pending.user,\r\n    }),\r\n    dispatch => ({\r\n        onSubmit: ({email, ...data}) => {\r\n            dispatch(updateUser({\r\n                ...data,\r\n                birth_date: data.birth_date.format('YYYY-MM-DD'),\r\n            }));\r\n        }\r\n    })\r\n)(Profile)\r\n","D:\\laravel\\www\\frontend_react\\src\\elements\\DatePicker.jsx",[],"D:\\laravel\\www\\frontend_react\\src\\redux\\actionTypes.js",[],"D:\\laravel\\www\\frontend_react\\src\\layout\\ContentTitle.jsx",[],"D:\\laravel\\www\\frontend_react\\src\\elements\\MaterialUI\\DataGrid.js",[],"D:\\laravel\\www\\frontend_react\\src\\pages\\GridPage.jsx",["237","238","239","240"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport {MediumHourGlass} from '../elements/Loaders';\r\nimport debounce from 'lodash/debounce';\r\n\r\nimport { Button } from '@material-ui/core';\r\nimport DataGrid  from '../elements/MaterialUI/DataGrid';\r\n\r\nclass GridPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    \r\n\r\n    componentDidMount() {\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"content content-924\">\r\n                <ContentTitle className=\"booking-title\">\r\n                    Grid Table Material UI 2\r\n                </ContentTitle>\r\n                <div style={{ height : '70vh'}}>\r\n                    <DataGrid/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n    }),\r\n    dispatch => ({\r\n    })\r\n)(GridPage);\r\n",["241","242"],"D:\\laravel\\www\\frontend_react\\src\\route\\AuthenticatedRoute2.jsx",[],"D:\\laravel\\www\\frontend_react\\src\\pages\\WithoutReg.jsx",[],"D:\\laravel\\www\\frontend_react\\src\\elements\\MaterialUI\\Tree\\TreeCustom.js",[],"D:\\laravel\\www\\frontend_react\\src\\route\\UnauthenticatedRoute.jsx",["243","244","245","246"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {CSSTransitionGroup} from 'react-transition-group';\r\nimport {Route, Redirect, withRouter} from 'react-router';\r\n\r\n        {/*<CSSTransitionGroup transitionName=\"fade\" transitionEnterTimeout={200} transitionLeaveTimeout={200}>*/}\r\nconst UnauthenticatedRoute = ({component: Component, ...rest}) => {\r\n    return (\r\n            <Route {...rest} render={\r\n                props => !rest.auth ? <Component {...props} /> : <Redirect to={rest.fallback || props.location} />\r\n            } />\r\n    );\r\n};\r\n        {/*</CSSTransitionGroup>*/}\r\n\r\nUnauthenticatedRoute.propTypes = {\r\n    auth: PropTypes.bool,\r\n    path: PropTypes.string,\r\n//    component: PropTypes.func.isRequired,\r\n//    component: PropTypes.object.isRequired,\r\n    fallback: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\r\n};\r\n\r\n// export default withRouter(UnauthenticatedRoute);\r\nexport default UnauthenticatedRoute;\r\n","D:\\laravel\\www\\frontend_react\\src\\icons\\Man.jsx",[],"D:\\laravel\\www\\frontend_react\\src\\pages\\TreePageM.jsx",["247","248","249","250"],"D:\\laravel\\www\\frontend_react\\src\\elements\\MaterialUI\\Tree\\TreeMultiSelection.js",[],"D:\\laravel\\www\\frontend_react\\src\\elements\\MaterialUI\\Tree\\TreeControlled.js",[],"D:\\laravel\\www\\frontend_react\\src\\pages\\TreePageCtrl.jsx",["251","252","253","254"],{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","severity":1,"message":"260","line":4,"column":9,"nodeType":"261","messageId":"262","endLine":4,"endColumn":24},{"ruleId":"259","severity":1,"message":"263","line":5,"column":8,"nodeType":"261","messageId":"262","endLine":5,"endColumn":16},{"ruleId":"264","severity":1,"message":"265","line":44,"column":5,"nodeType":"266","messageId":"267","endLine":46,"endColumn":6},{"ruleId":"268","severity":1,"message":"269","line":380,"column":47,"nodeType":"270","messageId":"271","endLine":380,"endColumn":49},{"ruleId":"255","replacedBy":"272"},{"ruleId":"257","replacedBy":"273"},{"ruleId":"274","severity":1,"message":"275","line":18,"column":29,"nodeType":"276","endLine":18,"endColumn":104},{"ruleId":"255","replacedBy":"277"},{"ruleId":"257","replacedBy":"278"},{"ruleId":"259","severity":1,"message":"279","line":29,"column":8,"nodeType":"261","messageId":"262","endLine":29,"endColumn":16},{"ruleId":"268","severity":1,"message":"269","line":83,"column":37,"nodeType":"270","messageId":"271","endLine":83,"endColumn":39},{"ruleId":"259","severity":1,"message":"280","line":1,"column":8,"nodeType":"261","messageId":"262","endLine":1,"endColumn":16},{"ruleId":"268","severity":1,"message":"281","line":27,"column":28,"nodeType":"270","messageId":"271","endLine":27,"endColumn":30},{"ruleId":"274","severity":1,"message":"282","line":47,"column":45,"nodeType":"276","endLine":47,"endColumn":57},{"ruleId":"274","severity":1,"message":"282","line":50,"column":45,"nodeType":"276","endLine":50,"endColumn":57},{"ruleId":"274","severity":1,"message":"282","line":51,"column":45,"nodeType":"276","endLine":51,"endColumn":57},{"ruleId":"274","severity":1,"message":"282","line":56,"column":53,"nodeType":"276","endLine":56,"endColumn":65},{"ruleId":"274","severity":1,"message":"282","line":57,"column":53,"nodeType":"276","endLine":57,"endColumn":65},{"ruleId":"274","severity":1,"message":"282","line":58,"column":53,"nodeType":"276","endLine":58,"endColumn":65},{"ruleId":"274","severity":1,"message":"282","line":70,"column":47,"nodeType":"276","endLine":70,"endColumn":59},{"ruleId":"274","severity":1,"message":"282","line":90,"column":45,"nodeType":"276","endLine":90,"endColumn":57},{"ruleId":"283","severity":1,"message":"284","line":21,"column":5,"nodeType":"285","messageId":"286","endLine":33,"endColumn":6},{"ruleId":"283","severity":1,"message":"284","line":46,"column":5,"nodeType":"285","messageId":"286","endLine":95,"endColumn":6},{"ruleId":"268","severity":1,"message":"281","line":68,"column":38,"nodeType":"270","messageId":"271","endLine":68,"endColumn":40},{"ruleId":"268","severity":1,"message":"281","line":69,"column":50,"nodeType":"270","messageId":"271","endLine":69,"endColumn":52},{"ruleId":"287","severity":1,"message":"288","line":74,"column":37,"nodeType":"289","messageId":"290","endLine":74,"endColumn":65},{"ruleId":"268","severity":1,"message":"269","line":74,"column":53,"nodeType":"270","messageId":"271","endLine":74,"endColumn":55},{"ruleId":"268","severity":1,"message":"269","line":87,"column":46,"nodeType":"270","messageId":"271","endLine":87,"endColumn":48},{"ruleId":"268","severity":1,"message":"281","line":90,"column":49,"nodeType":"270","messageId":"271","endLine":90,"endColumn":51},{"ruleId":"268","severity":1,"message":"269","line":100,"column":21,"nodeType":"270","messageId":"271","endLine":100,"endColumn":23},{"ruleId":"268","severity":1,"message":"269","line":107,"column":21,"nodeType":"270","messageId":"271","endLine":107,"endColumn":23},{"ruleId":"268","severity":1,"message":"269","line":117,"column":21,"nodeType":"270","messageId":"271","endLine":117,"endColumn":23},{"ruleId":"268","severity":1,"message":"269","line":126,"column":26,"nodeType":"270","messageId":"271","endLine":126,"endColumn":28},{"ruleId":"268","severity":1,"message":"269","line":140,"column":21,"nodeType":"270","messageId":"271","endLine":140,"endColumn":23},{"ruleId":"268","severity":1,"message":"269","line":147,"column":21,"nodeType":"270","messageId":"271","endLine":147,"endColumn":23},{"ruleId":"268","severity":1,"message":"269","line":157,"column":21,"nodeType":"270","messageId":"271","endLine":157,"endColumn":23},{"ruleId":"268","severity":1,"message":"269","line":159,"column":29,"nodeType":"270","messageId":"271","endLine":159,"endColumn":31},{"ruleId":"268","severity":1,"message":"269","line":164,"column":28,"nodeType":"270","messageId":"271","endLine":164,"endColumn":30},{"ruleId":"268","severity":1,"message":"281","line":165,"column":59,"nodeType":"270","messageId":"271","endLine":165,"endColumn":61},{"ruleId":"255","replacedBy":"291"},{"ruleId":"257","replacedBy":"292"},{"ruleId":"255","replacedBy":"293"},{"ruleId":"257","replacedBy":"294"},{"ruleId":"255","replacedBy":"295"},{"ruleId":"257","replacedBy":"296"},{"ruleId":"259","severity":1,"message":"280","line":1,"column":8,"nodeType":"261","messageId":"262","endLine":1,"endColumn":16},{"ruleId":"259","severity":1,"message":"297","line":3,"column":8,"nodeType":"261","messageId":"262","endLine":3,"endColumn":17},{"ruleId":"259","severity":1,"message":"298","line":7,"column":9,"nodeType":"261","messageId":"262","endLine":7,"endColumn":21},{"ruleId":"259","severity":1,"message":"299","line":7,"column":23,"nodeType":"261","messageId":"262","endLine":7,"endColumn":32},{"ruleId":"259","severity":1,"message":"300","line":9,"column":8,"nodeType":"261","messageId":"262","endLine":9,"endColumn":17},{"ruleId":"259","severity":1,"message":"263","line":13,"column":8,"nodeType":"261","messageId":"262","endLine":13,"endColumn":16},{"ruleId":"259","severity":1,"message":"301","line":14,"column":8,"nodeType":"261","messageId":"262","endLine":14,"endColumn":24},{"ruleId":"302","severity":1,"message":"303","line":29,"column":32,"nodeType":"304","messageId":"305","endLine":29,"endColumn":33,"suggestions":"306"},{"ruleId":"302","severity":1,"message":"303","line":29,"column":57,"nodeType":"304","messageId":"305","endLine":29,"endColumn":58,"suggestions":"307"},{"ruleId":"274","severity":1,"message":"275","line":203,"column":33,"nodeType":"276","endLine":205,"endColumn":68},{"ruleId":"308","severity":1,"message":"309","line":243,"column":33,"nodeType":"276","endLine":243,"endColumn":58},{"ruleId":"255","replacedBy":"310"},{"ruleId":"257","replacedBy":"311"},{"ruleId":"259","severity":1,"message":"312","line":2,"column":9,"nodeType":"261","messageId":"262","endLine":2,"endColumn":27},{"ruleId":"259","severity":1,"message":"313","line":2,"column":8,"nodeType":"261","messageId":"262","endLine":2,"endColumn":12},{"ruleId":"268","severity":1,"message":"269","line":26,"column":49,"nodeType":"270","messageId":"271","endLine":26,"endColumn":51},{"ruleId":"268","severity":1,"message":"281","line":30,"column":49,"nodeType":"270","messageId":"271","endLine":30,"endColumn":51},{"ruleId":"268","severity":1,"message":"269","line":118,"column":41,"nodeType":"270","messageId":"271","endLine":118,"endColumn":43},{"ruleId":"268","severity":1,"message":"269","line":121,"column":48,"nodeType":"270","messageId":"271","endLine":121,"endColumn":50},{"ruleId":"259","severity":1,"message":"260","line":4,"column":9,"nodeType":"261","messageId":"262","endLine":4,"endColumn":24},{"ruleId":"259","severity":1,"message":"263","line":5,"column":8,"nodeType":"261","messageId":"262","endLine":5,"endColumn":16},{"ruleId":"259","severity":1,"message":"314","line":7,"column":10,"nodeType":"261","messageId":"262","endLine":7,"endColumn":16},{"ruleId":"264","severity":1,"message":"265","line":11,"column":5,"nodeType":"266","messageId":"267","endLine":13,"endColumn":6},{"ruleId":"255","replacedBy":"315"},{"ruleId":"257","replacedBy":"316"},{"ruleId":"259","severity":1,"message":"312","line":3,"column":9,"nodeType":"261","messageId":"262","endLine":3,"endColumn":27},{"ruleId":"259","severity":1,"message":"317","line":4,"column":26,"nodeType":"261","messageId":"262","endLine":4,"endColumn":36},{"ruleId":"318","severity":1,"message":"319","line":6,"column":9,"nodeType":"320","messageId":"321","endLine":6,"endColumn":115},{"ruleId":"318","severity":1,"message":"319","line":14,"column":9,"nodeType":"320","messageId":"321","endLine":14,"endColumn":36},{"ruleId":"259","severity":1,"message":"260","line":4,"column":9,"nodeType":"261","messageId":"262","endLine":4,"endColumn":24},{"ruleId":"259","severity":1,"message":"263","line":5,"column":8,"nodeType":"261","messageId":"262","endLine":5,"endColumn":16},{"ruleId":"259","severity":1,"message":"314","line":7,"column":10,"nodeType":"261","messageId":"262","endLine":7,"endColumn":16},{"ruleId":"264","severity":1,"message":"265","line":11,"column":5,"nodeType":"266","messageId":"267","endLine":13,"endColumn":6},{"ruleId":"259","severity":1,"message":"260","line":4,"column":9,"nodeType":"261","messageId":"262","endLine":4,"endColumn":24},{"ruleId":"259","severity":1,"message":"263","line":5,"column":8,"nodeType":"261","messageId":"262","endLine":5,"endColumn":16},{"ruleId":"259","severity":1,"message":"314","line":7,"column":10,"nodeType":"261","messageId":"262","endLine":7,"endColumn":16},{"ruleId":"264","severity":1,"message":"265","line":11,"column":5,"nodeType":"266","messageId":"267","endLine":13,"endColumn":6},"no-native-reassign",["322"],"no-negated-in-lhs",["323"],"no-unused-vars","'MediumHourGlass' is defined but never used.","Identifier","unusedVar","'debounce' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["322"],["323"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["322"],["323"],"'throttle' is defined but never used.","'ReactDOM' is defined but never used.","Expected '!==' and instead saw '!='.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'newItemId'.","ArrowFunctionExpression","unsafeRefs",["322"],["323"],["322"],["323"],["322"],["323"],"'PropTypes' is defined but never used.","'getCountries' is defined but never used.","'getCities' is defined but never used.","'SexPicker' is defined but never used.","'AutocompleteList' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["324","325"],["326","327"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["322"],["323"],"'CSSTransitionGroup' is defined but never used.","'uuid' is defined but never used.","'Button' is defined but never used.",["322"],["323"],"'withRouter' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation",{"messageId":"328","fix":"329","desc":"330"},{"messageId":"331","fix":"332","desc":"333"},{"messageId":"328","fix":"334","desc":"330"},{"messageId":"331","fix":"335","desc":"333"},"removeEscape",{"range":"336","text":"337"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"338","text":"339"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"340","text":"337"},{"range":"341","text":"339"},[1174,1175],"",[1174,1174],"\\",[1199,1200],[1199,1199]]